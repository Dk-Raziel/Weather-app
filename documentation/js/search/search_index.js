var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.011,1,1.32]],["body/components/AppComponent.html",[0,1.751,1,2.403,2,2.51,3,0.298,4,0.298,5,2.443,6,2.443,7,2.443,8,2.443,9,0.247,10,3.187,11,0.587,12,4.867,13,4.676,14,2.189,15,3.781,16,3.06,17,3.101,18,5.347,19,3.101,20,4.867,21,0.798,22,0.034,23,1.15,24,0.351,25,1.15,26,1.638,27,3.101,28,3.101,29,2.443,30,3.584,31,2.443,32,1.46,33,2.443,34,1.638,35,0.919,36,2.443,37,1.638,38,2.443,39,1.497,40,2.189,41,2.443,42,2.443,43,0.021,44,0.026,45,0.021]],["title/modules/AppModule.html",[46,1.206,47,1.968]],["body/modules/AppModule.html",[1,2.654,3,0.277,4,0.277,9,0.23,16,1.838,21,1.234,22,0.035,23,1.069,24,0.326,25,1.069,26,1.522,43,0.019,44,0.025,45,0.019,46,1.391,47,3.935,48,1.522,49,1.838,50,2.949,51,3.291,52,2.959,53,2.034,54,2.962,55,2.962,56,2.962,57,2.962,58,3.323,59,3.323,60,2.959,61,2.271,62,2.034,63,3.563,64,2.651,65,3.563,66,4.643,67,3.86,68,2.566,69,2.651,70,4.643,71,2.962,72,3.563,73,3.563,74,4.643,75,3.563]],["title/modules/AppRoutingModule.html",[46,1.206,58,1.764]],["body/modules/AppRoutingModule.html",[0,1.387,3,0.329,4,0.329,9,0.273,21,1.165,22,0.035,23,1.27,24,0.387,25,1.27,39,2.022,40,2.957,43,0.023,44,0.028,45,0.023,48,1.809,53,2.418,58,2.957,64,2.418,69,2.957,76,4.235,77,4.235,78,4.235,79,3.565,80,5.179,81,3.521,82,3.05,83,5.179,84,4.235,85,4.235]],["title/components/CityCardComponent.html",[0,1.011,34,1.32]],["body/components/CityCardComponent.html",[0,1.635,1,1.066,2,1.873,3,0.333,4,0.194,5,1.59,6,1.59,7,1.59,8,1.59,9,0.161,11,0.382,14,1.424,15,3.321,16,2.688,17,2.313,19,2.313,21,0.891,22,0.035,23,0.748,24,0.228,25,0.748,26,1.066,27,2.313,28,2.313,29,1.59,30,2.995,31,1.59,32,1.089,33,1.59,34,2.008,35,1.115,36,1.59,37,1.066,38,1.59,39,0.974,40,1.424,41,1.59,42,1.59,43,0.013,44,0.019,45,0.013,86,2.615,87,3.018,88,2.074,89,3.686,90,2.727,91,1.298,92,3.018,93,2.34,94,3.907,95,2.313,96,3.082,97,4.279,98,3.63,99,0.425,100,3.018,101,0.655,102,1.828,103,1.287,104,2.495,105,3.63,106,3.018,107,2.615,108,1.59,109,2.313,110,1.59,111,1.797,112,3.63,113,3.63,114,3.63,115,3.63,116,3.63,117,1.835,118,3.63,119,3.63,120,1.551,121,3.63,122,2.074,123,4.152,124,5.212,125,4.994,126,4.994,127,2.495,128,1.873,129,4.333,130,2.074,131,2.074,132,2.495,133,1.797,134,1.797,135,2.495,136,4.279,137,2.495,138,3.558,139,3.018,140,3.63,141,2.495,142,2.495,143,1.797,144,2.074,145,2.495,146,3.018,147,3.018,148,1.797,149,1.287,150,2.495,151,2.495,152,2.495,153,2.074]],["title/interfaces/CityForecast.html",[154,0.16,155,1.447]],["body/interfaces/CityForecast.html",[3,0.264,4,0.133,9,0.111,11,0.262,21,0.357,22,0.034,24,0.157,32,0.818,35,1.066,43,0.009,44,0.015,45,0.009,91,1.92,99,0.292,101,0.647,117,1.511,120,1.165,149,1.996,154,0.089,155,1.278,156,0.471,157,0.471,158,0.979,159,1.425,160,1.814,161,1.996,162,2.952,163,3.154,164,3.24,165,2.727,166,2.108,167,2.727,168,2.727,169,2.727,170,2.466,171,2.466,172,1.738,173,2.727,174,1.738,175,2.727,176,1.278,177,1.557,178,1.557,179,1.996,180,2.727,181,1.738,182,1.738,183,2.321,184,3.74,185,1.635,186,3.87,187,3.87,188,2.466,189,3.217,190,2.867,191,2.727,192,1.557,193,1.278,194,2.267,195,1.557,196,2.727,197,2.727,198,1.922,199,2.294,200,2.209,201,2.867,202,2.526,203,2.867,204,2.796,205,2.867,206,2.727,207,1.738,208,2.21,209,2.867,210,2.466,211,2.466,212,2.466,213,2.21,214,2.466,215,2.466,216,2.466,217,2.21,218,2.466,219,2.727,220,1.738,221,2.727,222,2.867,223,2.569,224,2.466,225,2.867,226,2.867,227,2.727,228,2.727,229,1.738,230,2.727,231,1.557,232,2.727,233,2.727,234,1.557,235,2.867,236,1.964,237,2.727,238,2.727,239,2.466,240,2.466,241,2.466,242,1.738,243,2.727,244,1.738,245,2.727,246,1.278,247,2.727,248,2.727,249,1.738,250,2.727,251,2.727,252,1.557,253,2.466,254,1.738,255,2.727,256,1.738,257,1.738,258,2.727,259,2.727,260,2.788,261,2.466,262,2.788,263,2.466,264,1.964,265,2.727,266,2.727,267,2.727,268,2.267,269,0.624,270,2.466,271,2.466,272,2.727,273,1.161,274,2.727,275,2.466,276,1.165,277,1.407]],["title/interfaces/CityForecastCity.html",[154,0.16,271,1.968]],["body/interfaces/CityForecastCity.html",[3,0.353,4,0.268,9,0.222,11,0.528,21,0.718,22,0.035,24,0.316,32,1.73,35,1.16,43,0.019,44,0.024,45,0.019,99,0.588,101,0.883,154,0.179,156,0.947,157,0.947,158,1.97,161,2.345,166,2.703,176,2.703,177,2.596,178,2.596,179,2.345,181,2.897,182,2.897,183,2.345,185,1.811,269,1.04,271,2.897,276,1.474,278,2.868,279,4.546,280,3.444,281,4.795,282,3.444,283,2.788,284,2.897,285,2.062]],["title/components/CityForecastComponent.html",[0,1.011,37,1.32]],["body/components/CityForecastComponent.html",[0,1.262,1,0.894,2,1.643,3,0.163,4,0.163,5,1.333,6,1.333,7,1.333,8,1.333,9,0.135,11,0.32,14,1.195,15,3.113,16,2.52,17,2.029,19,2.029,21,0.897,22,0.035,23,0.628,24,0.191,25,0.628,26,1.361,27,2.029,28,2.029,29,1.333,30,2.746,31,1.333,32,0.955,33,1.333,34,0.894,35,1.05,36,1.333,37,1.841,38,1.333,39,0.817,40,1.195,41,1.333,42,1.333,43,0.011,44,0.017,45,0.011,82,3.34,86,3.34,89,2.746,90,3.236,92,3.583,94,3.583,95,2.029,96,2.777,99,0.357,100,2.648,101,0.59,103,2.223,107,3.518,108,1.333,109,1.333,110,1.333,111,3.104,122,1.74,129,4.351,130,1.74,131,1.74,133,1.507,134,2.294,143,2.294,144,1.74,146,1.74,155,2.173,158,2.648,193,1.807,198,1.361,269,0.729,273,0.955,276,2.236,286,1.74,287,4.94,288,2.648,289,3.205,290,2.294,291,4.637,292,3.856,293,3.185,294,2.029,295,4.31,296,2.092,297,3.185,298,2.092,299,3.185,300,3.185,301,3.185,302,2.648,303,3.185,304,2.029,305,2.648,306,2.029,307,2.648,308,2.092,309,3.185,310,2.092,311,3.185,312,2.092,313,2.092,314,2.092,315,3.185,316,3.856,317,2.092,318,3.185,319,2.092,320,3.185,321,2.092,322,2.029,323,2.092,324,2.092,325,1.507,326,2.092,327,2.092,328,2.092,329,1.507,330,3.185,331,2.092,332,2.092,333,2.092,334,1.74,335,2.092,336,2.092,337,3.185,338,2.092,339,3.185,340,3.583,341,2.092,342,2.092,343,1.74,344,2.092,345,3.205,346,2.092,347,2.092,348,2.092,349,3.185,350,3.185,351,3.856,352,2.092,353,2.092,354,1.333,355,2.092,356,2.092,357,1.74,358,2.092]],["title/interfaces/CityForecastList.html",[154,0.16,275,1.968]],["body/interfaces/CityForecastList.html",[3,0.408,4,0.249,9,0.207,11,0.491,21,0.668,22,0.035,24,0.293,35,0.926,43,0.017,44,0.023,45,0.017,91,2.019,99,0.547,101,0.911,117,2.206,154,0.166,156,0.88,157,0.88,158,1.831,183,2.708,185,1.47,190,2.76,192,2.473,193,2.029,194,3.6,195,2.473,209,2.76,234,2.473,268,3.6,269,0.991,273,1.804,275,2.76,276,2.095,277,2.234,285,1.876,359,2.667,360,3.345,361,3.345,362,4.364,363,2.914,364,3.345,365,2.708,366,2.76,367,2.708,368,4.33,369,4.33,370,2.708,371,2.708,372,2.667]],["title/interfaces/CityInfo.html",[93,1.447,154,0.16]],["body/interfaces/CityInfo.html",[3,0.265,4,0.108,9,0.09,11,0.212,21,0.289,22,0.034,24,0.21,32,1.448,35,0.955,43,0.007,44,0.012,45,0.007,91,1.967,93,1.377,99,0.237,101,0.789,102,0.593,117,1.976,120,0.982,128,1.763,149,1.763,154,0.152,156,0.381,157,0.381,160,1.601,161,1.185,162,2.992,163,3.17,166,2.456,170,2.177,171,2.177,172,1.464,174,1.464,176,1.077,177,1.312,178,1.312,179,1.763,181,2.177,182,2.177,183,2.61,185,1.594,192,2.579,193,1.911,195,2.579,198,1.743,199,2.117,200,1.93,201,2.6,202,2.33,203,2.6,204,2.579,205,2.6,207,1.464,208,1.951,209,2.177,210,2.177,211,2.177,212,2.177,213,1.951,214,2.177,215,2.177,216,2.177,217,2.162,218,2.177,220,1.464,222,2.6,223,2.329,224,2.177,225,2.6,226,2.6,229,1.464,231,1.312,234,1.312,235,2.6,236,1.655,239,2.177,240,2.879,241,2.879,242,1.464,244,1.464,246,1.077,249,1.464,252,1.312,253,2.177,254,1.464,256,1.464,257,1.464,260,3.253,261,2.879,262,2.461,263,2.177,264,3.253,269,0.526,270,2.6,273,1.572,277,1.185,280,2.6,282,2.6,283,1.763,284,2.177,285,1.458,304,0.885,329,2.461,360,2.6,361,2.6,363,2.33,364,2.6,365,1.763,366,1.464,367,1.763,370,1.763,371,1.763,373,0.496,374,1,375,1.91,376,1.91,377,1.91,378,1.91,379,1.91,380,1.91,381,2.6,382,1.91,383,1.91,384,1.464,385,1.464,386,1.91,387,1.91,388,2.177,389,1.91,390,1.91,391,1.91,392,1.91,393,1.91,394,1.91,395,1.91,396,1.91,397,1.91,398,1.91,399,1.91,400,1.91,401,1.91,402,1.91,403,1.91,404,1.464,405,1.91,406,1.464,407,2.938,408,1.951,409,1.655,410,1.312,411,1.154,412,1,413,1.154,414,1.154,415,1,416,1,417,1.154,418,0.885]],["title/interfaces/CityInfoClouds.html",[154,0.16,365,1.593]],["body/interfaces/CityInfoClouds.html",[3,0.446,4,0.349,9,0.29,11,0.687,22,0.034,24,0.411,35,0.848,43,0.024,44,0.029,45,0.024,99,0.765,101,0.687,154,0.233,156,1.233,157,1.233,185,1.721,249,3.419,269,1.228,273,1.347,365,2.767,366,2.862,373,1.605,419,3.733]],["title/interfaces/CityInfoCoord.html",[154,0.16,283,1.593]],["body/interfaces/CityInfoCoord.html",[3,0.43,4,0.321,9,0.267,11,0.633,22,0.034,24,0.378,35,1.121,43,0.022,44,0.027,45,0.022,99,0.705,101,0.781,154,0.214,156,1.135,157,1.135,170,3.683,171,3.683,172,3.252,174,3.252,185,1.814,269,1.168,273,1.24,283,2.633,284,2.636,373,1.479,420,3.438,421,4.805,422,4.805]],["title/interfaces/CityInfoFormatted.html",[102,1.32,154,0.16]],["body/interfaces/CityInfoFormatted.html",[3,0.329,4,0.157,9,0.131,11,0.31,21,0.421,22,0.035,24,0.284,32,1.27,35,0.91,43,0.011,44,0.017,45,0.011,91,1.851,93,1.77,99,0.345,101,0.31,102,1.326,117,1.784,120,0.865,128,1.601,149,1.601,154,0.219,156,0.555,157,0.555,160,1.455,161,1.044,162,2.866,163,3.148,166,2.259,170,1.978,171,1.978,172,1.29,174,1.29,176,0.948,177,1.155,178,1.155,179,1.601,181,1.978,182,1.978,183,2.487,185,1.37,192,2.418,193,1.77,195,2.418,198,1.614,199,1.985,200,1.81,201,2.407,202,2.185,203,2.407,204,2.418,205,2.407,207,1.29,208,1.773,209,1.978,210,1.978,211,1.978,212,1.978,213,1.773,214,1.978,215,1.978,216,1.978,217,2.418,218,1.978,220,1.29,222,2.407,223,2.156,224,1.978,225,2.407,226,2.407,229,1.29,231,1.155,234,1.155,235,2.407,236,1.457,239,1.978,240,2.699,241,2.699,242,1.29,244,1.29,246,0.948,249,1.29,252,1.155,253,1.978,254,1.29,256,1.29,257,1.29,260,3.05,261,2.699,262,2.236,263,1.978,264,3.05,269,0.711,270,1.978,273,1.505,277,1.044,280,1.978,282,1.978,283,1.601,284,1.978,285,1.11,304,1.978,329,2.236,360,1.978,361,1.978,363,1.948,364,1.978,365,1.601,366,1.29,367,1.601,370,1.601,371,1.601,373,0.723,374,1.457,375,1.682,376,1.682,377,1.682,378,1.682,379,1.682,380,1.682,381,1.978,382,1.682,383,1.682,384,1.29,385,1.29,386,1.682,387,1.682,388,1.978,389,1.682,390,1.682,391,1.682,392,1.682,393,1.682,394,1.682,395,1.682,396,1.682,397,1.682,398,1.682,399,1.682,400,1.682,401,1.682,402,1.682,403,1.682,404,1.29,405,1.682,406,1.29,407,2.236,408,1.773,409,1.457,410,2.418,411,2.581,412,2.236,413,2.581,414,2.581,415,2.236,416,2.236,417,2.581,418,2.699]],["title/interfaces/CityInfoMain.html",[154,0.16,367,1.593]],["body/interfaces/CityInfoMain.html",[3,0.337,4,0.198,9,0.165,11,0.391,22,0.034,24,0.234,35,0.482,43,0.014,44,0.02,45,0.014,99,0.435,101,0.849,149,2.861,154,0.132,156,0.701,157,0.701,162,2.108,163,3,185,1.873,193,1.73,198,2.245,199,2.462,200,2.245,201,3.348,202,2.71,203,3.348,204,3,205,3.348,207,2.353,208,2.713,210,3.028,211,3.028,212,3.028,213,2.713,214,3.028,215,3.028,216,3.028,217,2.713,218,3.028,220,2.353,222,3.348,223,3.277,224,3.028,225,3.348,226,3.348,229,2.353,231,3,269,0.845,273,0.766,334,3.95,354,2.353,363,1.317,367,1.904,373,0.913,384,3.348,385,3.348,388,3.028,423,2.123,424,3.95,425,3.95,426,3.95,427,3.692,428,3.069,429,3.692]],["title/interfaces/CityInfoMappedInfo.html",[154,0.16,410,1.764]],["body/interfaces/CityInfoMappedInfo.html",[3,0.386,4,0.308,9,0.256,11,0.607,22,0.034,24,0.362,43,0.021,44,0.027,45,0.021,89,3.167,99,0.675,101,0.831,117,1.941,120,2.123,154,0.205,156,1.088,157,1.088,188,2.525,189,3.294,198,2.123,246,2.328,269,1.243,285,2.214,290,2.854,373,1.416,410,2.837,415,2.854,430,3.294,431,3.294,432,4.1,433,4.1,434,4.1,435,4.131,436,4.969,437,4.131,438,3.579]],["title/interfaces/CityInfoSys.html",[154,0.16,408,1.764]],["body/interfaces/CityInfoSys.html",[3,0.396,4,0.269,9,0.223,11,0.529,22,0.034,24,0.316,35,0.653,43,0.019,44,0.024,45,0.019,99,0.59,101,0.933,154,0.179,156,0.949,157,0.949,161,2.349,162,3.295,163,3.295,164,3.896,166,2.535,176,2.704,177,2.6,178,2.6,179,2.349,183,2.79,185,1.882,192,3.089,195,3.089,269,1.042,273,1.037,285,1.82,373,1.236,404,3.678,406,3.678,408,2.6,409,2.491,439,2.875]],["title/interfaces/CityInfoWeather.html",[154,0.16,370,1.593]],["body/interfaces/CityInfoWeather.html",[3,0.409,4,0.288,9,0.239,11,0.879,22,0.034,24,0.339,35,0.699,43,0.02,44,0.026,45,0.02,91,2.187,99,0.631,101,0.85,154,0.192,156,1.016,157,1.016,160,2.231,166,2.838,179,2.455,185,1.578,235,3.539,239,3.539,240,3.033,241,3.033,242,3.033,244,3.033,246,2.755,269,1.09,273,1.111,285,2.187,363,2.864,370,2.455,373,1.324,440,3.078]],["title/interfaces/CityInfoWind.html",[154,0.16,371,1.593]],["body/interfaces/CityInfoWind.html",[3,0.425,4,0.312,9,0.259,11,0.615,22,0.034,24,0.368,35,0.759,43,0.022,44,0.027,45,0.022,99,0.685,101,0.767,117,2.299,120,2.142,154,0.208,156,1.103,157,1.103,185,1.801,199,2.349,200,2.142,202,2.586,204,2.863,252,3.428,253,3.646,254,3.195,256,3.195,257,3.195,269,1.147,273,1.205,371,2.586,373,1.437,441,3.341,442,4.756]],["title/modules/CoreModule.html",[46,1.206,443,2.225]],["body/modules/CoreModule.html",[3,0.353,4,0.353,9,0.293,21,1.126,22,0.034,23,1.364,24,0.416,25,1.364,43,0.024,44,0.029,45,0.024,48,1.943,50,2.597,64,2.597,69,3.087,443,3.894,444,4.548,445,3.894,446,2.898]],["title/components/HomeComponent.html",[0,1.011,39,1.206]],["body/components/HomeComponent.html",[0,1.512,1,0.886,2,2.213,3,0.161,4,0.161,5,1.322,6,1.322,7,1.322,8,1.322,9,0.134,11,0.317,14,1.184,15,3.102,16,2.511,17,2.016,19,2.016,21,0.962,22,0.035,23,0.622,24,0.19,25,0.622,26,0.886,27,2.016,28,2.016,29,1.322,30,2.734,31,1.322,32,1.15,33,1.322,34,0.886,35,1.01,36,1.322,37,0.886,38,1.322,39,1.675,40,2.637,41,1.322,42,1.322,43,0.011,44,0.017,45,0.011,89,2.016,90,2.734,91,1.534,95,2.016,96,2.762,99,0.354,101,0.587,102,0.886,103,2.213,106,2.63,108,1.322,109,1.322,110,1.322,111,3.09,120,0.886,123,2.63,128,1.07,133,2.278,134,2.762,138,3.566,139,3.566,147,1.724,153,2.63,155,2.281,160,0.972,188,2.734,190,2.016,193,1.482,269,0.724,276,1.352,277,1.632,285,1.371,287,2.63,294,2.016,304,2.016,305,2.63,306,2.016,307,2.63,343,1.724,354,2.016,438,2.278,447,1.724,448,3.163,449,3.163,450,2.63,451,3.163,452,2.63,453,3.835,454,3.163,455,3.835,456,2.63,457,2.63,458,2.074,459,3.163,460,3.163,461,1.494,462,2.074,463,3.163,464,4.29,465,3.163,466,3.163,467,4.209,468,2.074,469,4.29,470,4.29,471,3.163,472,4.29,473,3.163,474,2.074,475,1.494,476,4.29,477,2.074,478,2.074,479,1.724,480,1.724,481,2.016,482,2.074,483,2.074,484,2.074,485,2.074,486,3.835,487,3.566,488,2.074,489,2.074,490,2.074,491,1.724,492,2.074,493,2.074,494,2.074,495,2.074,496,2.074,497,2.074,498,2.074,499,3.163,500,2.074,501,2.074,502,2.074,503,2.074,504,4.29,505,1.724,506,2.074,507,2.074,508,3.835,509,3.163,510,2.074,511,4.29,512,3.163,513,2.074,514,2.074,515,2.074,516,3.566,517,2.074,518,2.074,519,2.074,520,2.074,521,3.163,522,3.163,523,3.163,524,2.074,525,2.074,526,2.074]],["title/modules/PublicModule.html",[46,1.206,59,1.764]],["body/modules/PublicModule.html",[3,0.309,4,0.309,9,0.256,21,1.187,22,0.035,23,1.192,24,0.363,25,1.192,26,1.698,39,2.338,43,0.021,44,0.027,45,0.021,46,1.552,48,1.698,49,2.05,50,3.104,51,2.532,52,2.532,53,2.269,59,3.508,60,3.172,61,2.532,62,2.269,64,2.842,69,2.842,445,3.585,446,2.532,527,3.303,528,3.303,529,3.303,530,3.419,531,3.973,532,3.973,533,3.973]],["title/modules/SharedModule.html",[46,1.206,530,1.764]],["body/modules/SharedModule.html",[2,1.815,3,0.273,4,0.273,9,0.227,21,1.177,22,0.035,23,1.055,24,0.322,25,1.055,26,1.503,34,2.649,37,2.649,43,0.019,44,0.025,45,0.019,46,1.374,48,1.503,49,1.815,50,2.931,51,2.242,52,2.242,53,2.931,60,2.935,61,2.242,62,2.009,64,2.009,69,2.63,445,3.317,446,2.242,530,3.56,534,2.925,535,2.925,536,2.925,537,3.541,538,3.519,539,5.134,540,5.134,541,2.925,542,3.519]],["title/pipes/TruncatePipe.html",[537,1.764,543,1.968]],["body/pipes/TruncatePipe.html",[3,0.282,4,0.282,9,0.234,11,0.555,14,2.071,21,0.755,22,0.034,23,1.088,24,0.332,25,1.088,32,1.562,43,0.019,44,0.025,45,0.019,95,2.311,101,0.555,103,1.871,148,3.383,160,1.7,185,1.712,200,1.55,285,2.198,294,2.311,306,2.311,325,2.612,357,3.015,461,2.612,537,2.682,543,3.511,544,3.627,545,3.015,546,4.697,547,5.51,548,4.697,549,3.905,550,6.032,551,4.697,552,4.697,553,4.697,554,4.697,555,5.707,556,3.627,557,3.752,558,3.905,559,4.697,560,3.627,561,3.627]],["title/injectables/WeatherApiService.html",[481,1.968,562,1.968]],["body/injectables/WeatherApiService.html",[3,0.37,4,0.172,9,0.143,11,0.339,13,1.843,21,1.04,22,0.035,23,0.665,24,0.203,25,0.665,32,1.198,35,1.006,43,0.012,44,0.018,45,0.012,71,1.843,82,3.837,91,1.904,93,2.08,99,0.378,101,0.611,102,1.896,103,2.453,108,1.413,109,1.413,110,1.413,117,0.866,120,1.421,155,1.039,160,2.228,188,3.395,198,1.421,200,1.896,202,1.716,246,1.559,269,0.761,273,0.998,276,1.421,285,1.785,294,2.12,306,2.545,322,2.12,325,2.876,381,2.12,388,2.12,412,2.396,416,2.396,418,1.413,431,1.843,432,1.597,433,1.597,434,1.597,435,2.766,437,4.306,438,3.597,456,2.766,457,2.766,461,2.876,467,3.953,475,1.597,481,2.12,491,4.614,549,2.766,557,2.396,562,2.12,563,2.217,564,4.152,565,1.843,566,4.994,567,3.327,568,3.327,569,4.756,570,3.327,571,3.327,572,2.217,573,3.327,574,3.327,575,3.327,576,3.327,577,2.217,578,4.438,579,4.438,580,3.327,581,2.217,582,3.994,583,3.327,584,3.327,585,3.327,586,2.217,587,3.327,588,3.327,589,2.217,590,3.327,591,2.217,592,1.597,593,2.217,594,2.217,595,2.217,596,4.438,597,3.327,598,2.217,599,2.217,600,2.217,601,2.217,602,2.217,603,2.217,604,2.217,605,2.217,606,2.217,607,2.217,608,2.217,609,2.217,610,2.217,611,1.843,612,2.217,613,2.217,614,2.217,615,2.217,616,2.217,617,2.217,618,2.217,619,2.217,620,2.217,621,2.217,622,2.217,623,2.217,624,2.217,625,2.217,626,2.217,627,3.327,628,2.217,629,2.217,630,2.217,631,2.217,632,2.217,633,2.217]],["title/coverage.html",[634,3.509]],["body/coverage.html",[0,1.684,1,1.305,3,0.443,9,0.197,10,2.54,22,0.034,34,1.305,37,1.305,39,1.193,43,0.016,44,0.022,45,0.016,86,3.017,87,2.54,88,2.54,93,1.432,101,0.468,102,1.305,154,0.314,155,1.432,157,1.665,158,2.937,159,2.54,271,1.947,275,1.947,276,1.79,278,2.54,283,1.576,286,2.54,322,1.947,359,2.54,365,1.576,367,1.576,370,1.576,371,1.576,373,2.105,374,3.017,408,1.744,410,1.744,419,2.54,420,2.54,423,2.54,430,2.54,439,2.54,440,2.54,441,2.54,447,2.54,481,1.947,505,5.257,537,1.744,543,1.947,545,2.54,562,1.947,564,2.54,565,2.54,592,3.017,634,2.54,635,2.54,636,3.055,637,3.055,638,5.567,639,4.189,640,4.781,641,4.781,642,4.189,643,3.055,644,4.189,645,3.055,646,3.055,647,3.055,648,3.483,649,2.54,650,5.144,651,2.54,652,2.54,653,2.54,654,2.54,655,2.54,656,3.055,657,3.055]],["title/dependencies.html",[49,1.917,658,2.577]],["body/dependencies.html",[22,0.035,23,1.278,43,0.023,44,0.028,45,0.023,49,2.198,67,4.321,68,3.743,81,3.542,289,3.542,446,2.715,475,3.069,480,3.542,541,3.542,659,4.261,660,4.261,661,5.212,662,4.261,663,4.261,664,4.261,665,4.261,666,4.261,667,4.261,668,4.261,669,4.261,670,4.261,671,4.261,672,4.261,673,4.261]],["title/index.html",[99,0.439,674,2.577,675,2.577]],["body/index.html",[0,1.603,4,0.249,16,2.526,22,0.023,25,0.96,32,0.96,43,0.017,44,0.023,45,0.017,62,1.827,90,2.755,91,1.144,103,1.651,148,3.777,161,2.23,176,1.5,198,1.367,199,2.026,208,1.827,213,1.827,217,2.796,234,2.469,261,2.039,263,2.039,276,1.367,290,3.114,322,2.039,354,2.039,428,2.66,450,2.66,452,2.66,479,2.66,516,2.66,635,3.594,661,2.66,676,4.324,677,3.2,678,5.645,679,4.897,680,4.324,681,4.324,682,3.2,683,3.2,684,2.66,685,3.2,686,4.324,687,3.2,688,3.2,689,3.2,690,3.2,691,3.2,692,3.2,693,3.2,694,3.2,695,3.2,696,3.2,697,3.2,698,3.2,699,3.2,700,3.2,701,3.2,702,3.2,703,4.324,704,3.2,705,4.879,706,4.324,707,3.2,708,3.2,709,3.2,710,3.2,711,3.2,712,3.2,713,3.2,714,3.2,715,3.2,716,3.2,717,3.2,718,5.645,719,3.2,720,3.2,721,4.324,722,3.2,723,3.2,724,3.2,725,3.2,726,3.2,727,3.2,728,3.2,729,4.897,730,3.2,731,4.554,732,3.2,733,3.2,734,3.2,735,3.2,736,2.66,737,3.2,738,2.66,739,4.324,740,5.244,741,2.66,742,4.324,743,3.2,744,3.2,745,3.2,746,3.2,747,4.897,748,3.2,749,3.2,750,3.2]],["title/modules.html",[48,1.803]],["body/modules.html",[22,0.029,43,0.025,44,0.029,45,0.025,47,2.946,48,1.975,58,2.639,59,2.639,68,4.183,443,3.329,530,2.639,751,5.808,752,5.808,753,6.122,754,5.458,755,5.458]],["title/overview.html",[756,3.509]],["body/overview.html",[1,2.543,2,1.871,22,0.034,26,1.55,34,2.543,37,2.543,39,2.034,43,0.019,44,0.025,45,0.019,46,1.416,47,3.885,48,1.55,49,1.871,50,2.071,51,2.311,52,2.311,53,2.071,54,3.015,55,3.015,56,3.015,57,3.015,58,2.974,59,3.398,60,2.993,61,2.311,62,2.071,79,2.311,128,2.423,143,2.612,156,0.996,527,3.015,528,3.015,529,3.015,530,3.556,534,3.015,535,3.015,536,3.015,537,3.398,543,2.311,562,2.311,684,3.015,756,3.015,757,3.627,758,3.627]],["title/routes.html",[79,2.69]],["body/routes.html",[22,0.031,43,0.027,44,0.031,45,0.027,79,3.185]],["title/miscellaneous/variables.html",[759,2.142,760,3.089]],["body/miscellaneous/variables.html",[9,0.275,11,0.554,22,0.035,32,1.086,35,0.469,43,0.013,44,0.019,45,0.013,91,1.294,93,1.165,99,0.424,101,0.763,102,1.062,107,2.608,117,1.414,128,1.868,149,1.868,154,0.188,155,1.697,164,2.608,166,2.337,176,1.697,184,2.067,190,2.722,199,1.697,200,2.224,223,2.067,231,2.067,246,1.697,252,2.067,270,2.307,277,1.282,280,2.307,281,2.067,282,2.307,288,2.067,302,3.01,340,2.067,345,2.067,360,2.307,361,2.307,362,2.067,363,2.42,364,2.307,372,2.067,381,1.584,384,2.307,385,2.307,404,1.584,406,1.584,407,1.79,418,1.584,421,3.01,422,3.01,424,3.01,425,3.01,426,3.01,432,1.79,433,1.79,434,1.79,442,3.01,487,3.01,557,3.379,558,3.01,592,3.379,611,2.067,648,3.01,649,3.01,651,3.01,652,3.01,653,3.01,654,2.067,655,2.067,705,3.01,731,3.55,736,3.01,738,3.01,741,3.01,759,2.067,760,2.067,761,3.621,762,2.486,763,2.486,764,3.621,765,2.486,766,2.486,767,2.486,768,3.621,769,2.486,770,3.621,771,2.486,772,2.486,773,2.486,774,3.621,775,4.692,776,3.621,777,3.621,778,2.486,779,2.486,780,2.486,781,2.486,782,2.486,783,2.486,784,2.486,785,3.621,786,2.486,787,2.486,788,2.486,789,2.486,790,2.486,791,2.486,792,3.621,793,3.621,794,2.486,795,2.486,796,2.486,797,2.486,798,2.486,799,2.486,800,3.621,801,3.621,802,2.486,803,2.486,804,2.486,805,2.486,806,2.486,807,2.486,808,2.486,809,2.486,810,2.486,811,2.486,812,3.621,813,3.621,814,3.621,815,3.621,816,3.621,817,3.621,818,3.621,819,3.621,820,3.621,821,3.621,822,2.486,823,2.486,824,2.486]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["0.0089",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0114",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":609,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["0.9.1",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["00",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01d",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":128,"title":{},"body":{"components/CityCardComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"components/HomeComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.9.0",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["1000",{"_index":324,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["10000",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1000px",{"_index":355,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["1017",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1020.96",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1021.08",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":153,"title":{},"body":{"components/CityCardComponent.html":{},"components/HomeComponent.html":{}}}],["12",{"_index":758,"title":{},"body":{"overview.html":{}}}],["12.48",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200px",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["14/14",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["1563854071",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1563855728",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1563861600",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1563907094",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":630,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["17.07",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.18",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["195.002",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":143,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"overview.html":{}}}],["2).tofixed(0",{"_index":633,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["2.11",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.8.0",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":558,"title":{},"body":{"pipes/TruncatePipe.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200px",{"_index":135,"title":{},"body":{"components/CityCardComponent.html":{}}}],["2019",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20px",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["2122311",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.41",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22.5",{"_index":608,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["220",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2759794",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2980b9",{"_index":341,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["3",{"_index":262,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["3.24",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["30px",{"_index":151,"title":{},"body":{"components/CityCardComponent.html":{}}}],["4",{"_index":757,"title":{},"body":{"overview.html":{}}}],["4.8936",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.89",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":684,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5/5",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["52.3728",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":141,"title":{},"body":{"components/CityCardComponent.html":{}}}],["584px",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.4.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["650px",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["6539761",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6792",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.1",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7200",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":691,"title":{},"body":{"index.html":{}}}],["8.1.1",{"_index":661,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.1.2",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80vw",{"_index":356,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["9/9",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["__card",{"_index":133,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["__container",{"_index":503,"title":{},"body":{"components/HomeComponent.html":{}}}],["__content",{"_index":136,"title":{},"body":{"components/CityCardComponent.html":{}}}],["__forecast",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{}}}],["__title",{"_index":144,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["actual_component",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["added",{"_index":415,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMappedInfo.html":{}}}],["adding",{"_index":549,"title":{},"body":{"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["align",{"_index":147,"title":{},"body":{"components/CityCardComponent.html":{},"components/HomeComponent.html":{}}}],["alizarin",{"_index":130,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["already",{"_index":711,"title":{},"body":{"index.html":{}}}],["amsterdam",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":678,"title":{},"body":{"index.html":{}}}],["angular.json",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":446,"title":{},"body":{"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherApiService.html":{}}}],["angular/compiler",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":541,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":81,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animate",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["animate(250",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{}}}],["animate(500",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{}}}],["animations",{"_index":343,"title":{},"body":{"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["api",{"_index":188,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfoMappedInfo.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["api.service",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["api.service.ts",{"_index":565,"title":{},"body":{"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["api.service.ts:14",{"_index":589,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["api.service.ts:17",{"_index":586,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["api.service.ts:27",{"_index":581,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["api.service.ts:34",{"_index":577,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["api.service.ts:40",{"_index":572,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["app.component",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":47,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":58,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":579,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["array",{"_index":277,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["arround",{"_index":690,"title":{},"body":{"index.html":{}}}],["artifacts",{"_index":732,"title":{},"body":{"index.html":{}}}],["atmospheric",{"_index":222,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["automatically",{"_index":724,"title":{},"body":{"index.html":{}}}],["auxparams",{"_index":596,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["auxresponse",{"_index":627,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["available",{"_index":755,"title":{},"body":{"modules.html":{}}}],["average",{"_index":435,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{}}}],["average_temp",{"_index":432,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":708,"title":{},"body":{"index.html":{}}}],["background",{"_index":351,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["base",{"_index":381,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["bem",{"_index":698,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["bordercolor",{"_index":337,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["both",{"_index":551,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["bottom",{"_index":152,"title":{},"body":{"components/CityCardComponent.html":{}}}],["browse",{"_index":753,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":731,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["calculate",{"_index":299,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["calculation",{"_index":209,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["call",{"_index":189,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfoMappedInfo.html":{}}}],["calls",{"_index":567,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["capitalize",{"_index":358,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["card",{"_index":89,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"interfaces/CityInfoMappedInfo.html":{},"components/HomeComponent.html":{}}}],["card'},{'name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["card.component.html",{"_index":98,"title":{},"body":{"components/CityCardComponent.html":{}}}],["card.component.scss",{"_index":97,"title":{},"body":{"components/CityCardComponent.html":{}}}],["card.component.ts",{"_index":88,"title":{},"body":{"components/CityCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:16",{"_index":104,"title":{},"body":{"components/CityCardComponent.html":{}}}],["card/city",{"_index":87,"title":{},"body":{"components/CityCardComponent.html":{},"coverage.html":{}}}],["cardinal",{"_index":436,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{}}}],["cards",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["cc",{"_index":132,"title":{},"body":{"components/CityCardComponent.html":{}}}],["celsius",{"_index":203,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["center",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{}}}],["cf",{"_index":353,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["change",{"_index":726,"title":{},"body":{"index.html":{}}}],["characters",{"_index":552,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["chart",{"_index":287,"title":{},"body":{"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["chart('cf__canvas",{"_index":333,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["chart.js",{"_index":289,"title":{},"body":{"components/CityForecastComponent.html":{},"dependencies.html":{}}}],["check",{"_index":749,"title":{},"body":{"index.html":{}}}],["child",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["circles",{"_index":689,"title":{},"body":{"index.html":{}}}],["cities",{"_index":213,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"index.html":{}}}],["citiesinfo",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["city",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["city.coord",{"_index":168,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["city.coord.lat",{"_index":169,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["city.coord.lon",{"_index":173,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["city.country",{"_index":175,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["city.id",{"_index":165,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["city.model.ts",{"_index":278,"title":{},"body":{"interfaces/CityForecastCity.html":{},"coverage.html":{}}}],["city.name",{"_index":167,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["city.timezone",{"_index":180,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["citycardcomponent",{"_index":34,"title":{"components/CityCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["cityforecast",{"_index":155,"title":{"interfaces/CityForecast.html":{}},"body":{"interfaces/CityForecast.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cityforecastcity",{"_index":271,"title":{"interfaces/CityForecastCity.html":{}},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"coverage.html":{}}}],["cityforecastcomponent",{"_index":37,"title":{"components/CityForecastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["cityforecastlist",{"_index":275,"title":{"interfaces/CityForecastList.html":{}},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"coverage.html":{}}}],["cityforecastmock",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cityinfo",{"_index":93,"title":{"interfaces/CityInfo.html":{}},"body":{"components/CityCardComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cityinfo.mapped_info.average_temp}}ºc",{"_index":116,"title":{},"body":{"components/CityCardComponent.html":{}}}],["cityinfo.mapped_info.compass_direction",{"_index":121,"title":{},"body":{"components/CityCardComponent.html":{}}}],["cityinfo.name",{"_index":112,"title":{},"body":{"components/CityCardComponent.html":{}}}],["cityinfo.weather[0].description",{"_index":113,"title":{},"body":{"components/CityCardComponent.html":{}}}],["cityinfo.wind.speed",{"_index":118,"title":{},"body":{"components/CityCardComponent.html":{}}}],["cityinfoclouds",{"_index":365,"title":{"interfaces/CityInfoClouds.html":{}},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoFormatted.html":{},"coverage.html":{}}}],["cityinfocoord",{"_index":283,"title":{"interfaces/CityInfoCoord.html":{}},"body":{"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"coverage.html":{}}}],["cityinfoformated",{"_index":106,"title":{},"body":{"components/CityCardComponent.html":{},"components/HomeComponent.html":{}}}],["cityinfoformatted",{"_index":102,"title":{"interfaces/CityInfoFormatted.html":{}},"body":{"components/CityCardComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cityinfomain",{"_index":367,"title":{"interfaces/CityInfoMain.html":{}},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"coverage.html":{}}}],["cityinfomappedinfo",{"_index":410,"title":{"interfaces/CityInfoMappedInfo.html":{}},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMappedInfo.html":{},"coverage.html":{}}}],["cityinfomock",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cityinfosys",{"_index":408,"title":{"interfaces/CityInfoSys.html":{}},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"coverage.html":{}}}],["cityinfoweather",{"_index":370,"title":{"interfaces/CityInfoWeather.html":{}},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{},"coverage.html":{}}}],["cityinfowind",{"_index":371,"title":{"interfaces/CityInfoWind.html":{}},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWind.html":{},"coverage.html":{}}}],["citytemps",{"_index":601,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["citytemps.temp_max",{"_index":631,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["citytemps.temp_min",{"_index":632,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["class",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"index.html":{}}}],["clear",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":679,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["clicking",{"_index":687,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":366,"title":{},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoFormatted.html":{}}}],["cloudiness",{"_index":249,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoFormatted.html":{}}}],["clouds",{"_index":360,"title":{},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["clouds.all",{"_index":394,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["clouds.model.ts",{"_index":419,"title":{},"body":{"interfaces/CityInfoClouds.html":{},"coverage.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_publicmodule",{"_index":527,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_declarations",{"_index":528,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_publicmodule_imports",{"_index":529,"title":{},"body":{"modules/PublicModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":534,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":535,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":536,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cnt",{"_index":184,"title":{},"body":{"interfaces/CityForecast.html":{},"miscellaneous/variables.html":{}}}],["cod",{"_index":270,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":161,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"index.html":{}}}],["codes",{"_index":236,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["color",{"_index":129,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["column",{"_index":506,"title":{},"body":{"components/HomeComponent.html":{}}}],["combinelatest",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{}}}],["commonmodule",{"_index":445,"title":{},"body":{"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["compass",{"_index":575,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["compass_direction",{"_index":433,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["compassdirections",{"_index":610,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["compassdirections[(degreehelper",{"_index":629,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["compodoc",{"_index":719,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["condition",{"_index":235,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{}}}],["configuration",{"_index":311,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["const",{"_index":82,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CityForecastComponent.html":{},"injectables/WeatherApiService.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["content",{"_index":123,"title":{},"body":{"components/CityCardComponent.html":{},"components/HomeComponent.html":{}}}],["conventions",{"_index":694,"title":{},"body":{"index.html":{}}}],["coord",{"_index":280,"title":{},"body":{"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["coord.lat",{"_index":376,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["coord.lon",{"_index":375,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["coord.model.ts",{"_index":420,"title":{},"body":{"interfaces/CityInfoCoord.html":{},"coverage.html":{}}}],["coordinates",{"_index":284,"title":{},"body":{"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{}}}],["core/services/weather",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{}}}],["coremodule",{"_index":443,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{}}}],["counter",{"_index":555,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["country",{"_index":176,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":634,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crimson",{"_index":131,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["current",{"_index":388,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"injectables/WeatherApiService.html":{}}}],["currently",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":414,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["customized",{"_index":553,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["d",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":193,"title":{},"body":{"interfaces/CityForecast.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"components/HomeComponent.html":{}}}],["data/time",{"_index":268,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{}}}],["datasets",{"_index":336,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["date",{"_index":321,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["date(res.dt",{"_index":323,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["date.tolocaletimestring('en",{"_index":326,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["declarations",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":200,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoWind.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":103,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"index.html":{}}}],["deg",{"_index":442,"title":{},"body":{"interfaces/CityInfoWind.html":{},"miscellaneous/variables.html":{}}}],["degreehelper",{"_index":606,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["degrees",{"_index":256,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWind.html":{}}}],["dependencies",{"_index":49,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":279,"title":{},"body":{"interfaces/CityForecastCity.html":{}}}],["dev",{"_index":681,"title":{},"body":{"index.html":{}}}],["development",{"_index":720,"title":{},"body":{"index.html":{}}}],["deviation",{"_index":210,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["digit",{"_index":330,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["direction",{"_index":120,"title":{},"body":{"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoWind.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["directive",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["directives",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":730,"title":{},"body":{"index.html":{}}}],["directory",{"_index":735,"title":{},"body":{"index.html":{}}}],["display",{"_index":90,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["displayed",{"_index":297,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["dist",{"_index":734,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":635,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["download",{"_index":701,"title":{},"body":{"index.html":{}}}],["drawchart",{"_index":295,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["draws",{"_index":309,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["dt",{"_index":361,"title":{},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["dt_txt",{"_index":362,"title":{},"body":{"interfaces/CityForecastList.html":{},"miscellaneous/variables.html":{}}}],["during",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":615,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["e2e",{"_index":744,"title":{},"body":{"index.html":{}}}],["element",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["end",{"_index":148,"title":{},"body":{"components/CityCardComponent.html":{},"pipes/TruncatePipe.html":{},"index.html":{}}}],["ene",{"_index":614,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["env/environment.prod",{"_index":593,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["environment",{"_index":592,"title":{},"body":{"injectables/WeatherApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.open_weather_base_api_url",{"_index":588,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["environment.open_weather_key",{"_index":584,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["environment.prod.ts",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ese",{"_index":616,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["etc",{"_index":179,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{}}}],["execute",{"_index":742,"title":{},"body":{"index.html":{}}}],["executing",{"_index":717,"title":{},"body":{"index.html":{}}}],["expanded",{"_index":216,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["exports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extends",{"_index":413,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["extra",{"_index":416,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"injectables/WeatherApiService.html":{}}}],["extreme",{"_index":242,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{}}}],["f37335",{"_index":338,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["fahrenheit",{"_index":205,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["false",{"_index":340,"title":{},"body":{"components/CityForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":145,"title":{},"body":{"components/CityCardComponent.html":{}}}],["fee18f34c8778a20c14306ed2d9e34a9",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetch",{"_index":438,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["fetched",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetchs",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filereplacements",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":727,"title":{},"body":{"index.html":{}}}],["fill",{"_index":339,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["finality",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":737,"title":{},"body":{"index.html":{}}}],["flex",{"_index":138,"title":{},"body":{"components/CityCardComponent.html":{},"components/HomeComponent.html":{}}}],["flow",{"_index":710,"title":{},"body":{"index.html":{}}}],["folder",{"_index":696,"title":{},"body":{"index.html":{}}}],["font",{"_index":126,"title":{},"body":{"components/CityCardComponent.html":{}}}],["forecast",{"_index":276,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"index.html":{}}}],["forecast'},{'name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["forecast.component.html",{"_index":293,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecast.component.scss",{"_index":292,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecast.component.ts",{"_index":286,"title":{},"body":{"components/CityForecastComponent.html":{},"coverage.html":{}}}],["forecast.component.ts:15",{"_index":296,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecast.component.ts:18",{"_index":310,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecast.component.ts:24",{"_index":308,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecast.component.ts:29",{"_index":298,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecast.mock.ts",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecast.model.ts",{"_index":159,"title":{},"body":{"interfaces/CityForecast.html":{},"coverage.html":{}}}],["forecast/city",{"_index":158,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"coverage.html":{}}}],["forecaste",{"_index":272,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["forecasted",{"_index":194,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{}}}],["forecastinfo",{"_index":291,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forecastinfo.city.name",{"_index":349,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forelist",{"_index":313,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["forelist.map(res",{"_index":316,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["formatter",{"_index":574,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["formatweathercall",{"_index":412,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"injectables/WeatherApiService.html":{}}}],["formatweathercall(res",{"_index":571,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["found",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":411,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["further",{"_index":746,"title":{},"body":{"index.html":{}}}],["gb",{"_index":177,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{}}}],["generate",{"_index":729,"title":{},"body":{"index.html":{}}}],["generated",{"_index":677,"title":{},"body":{"index.html":{}}}],["geo",{"_index":170,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{}}}],["geographically",{"_index":215,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["getforecast",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["getforecast(city",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["getting",{"_index":674,"title":{"index.html":{}},"body":{}}],["getweather",{"_index":570,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["getweather(city",{"_index":580,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["go",{"_index":748,"title":{},"body":{"index.html":{}}}],["graph",{"_index":754,"title":{},"body":{"modules.html":{}}}],["grnd_level",{"_index":385,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["ground",{"_index":229,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["group",{"_index":239,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{}}}],["h",{"_index":502,"title":{},"body":{"components/HomeComponent.html":{}}}],["h__forecast",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{}}}],["handled",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["handler",{"_index":568,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["hardcoded",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":747,"title":{},"body":{"index.html":{}}}],["holder",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["home.component.html",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":532,"title":{},"body":{"modules/PublicModule.html":{}}}],["homecomponent",{"_index":39,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"coverage.html":{},"overview.html":{}}}],["hour",{"_index":329,"title":{},"body":{"components/CityForecastComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["hours",{"_index":263,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"index.html":{}}}],["hpa",{"_index":226,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["http",{"_index":595,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["http://localhost:4200",{"_index":723,"title":{},"body":{"index.html":{}}}],["http://openweathermap.org/img/wn/${icontype}.png",{"_index":628,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["http://openweathermap.org/img/wn/1d.png",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":590,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["httpclientmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":582,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["https://api.openweathermap.org/data/2.5",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["humidity",{"_index":231,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":246,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoWeather.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["icontype",{"_index":603,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["id",{"_index":166,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":109,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["imperial",{"_index":204,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoWind.html":{}}}],["implements",{"_index":95,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{}}}],["import",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":99,"title":{"index.html":{}},"body":{"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["info.mock.ts",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["info.model.ts",{"_index":374,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"coverage.html":{}}}],["info/city",{"_index":373,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"coverage.html":{}}}],["information",{"_index":273,"title":{},"body":{"interfaces/CityForecast.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"injectables/WeatherApiService.html":{}}}],["initializing",{"_index":463,"title":{},"body":{"components/HomeComponent.html":{}}}],["injectable",{"_index":562,"title":{"injectables/WeatherApiService.html":{}},"body":{"injectables/WeatherApiService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":563,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["input",{"_index":94,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["inputs",{"_index":100,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["install",{"_index":704,"title":{},"body":{"index.html":{}}}],["interacted",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{}}}],["interface",{"_index":154,"title":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{}},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interfaces",{"_index":156,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"overview.html":{}}}],["internal",{"_index":162,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoSys.html":{}}}],["itcss",{"_index":695,"title":{},"body":{"index.html":{}}}],["items",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["jp",{"_index":178,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{}}}],["justify",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["karma",{"_index":743,"title":{},"body":{"index.html":{}}}],["kelvin",{"_index":201,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["label",{"_index":142,"title":{},"body":{"components/CityCardComponent.html":{}}}],["labels",{"_index":335,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["landing",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["large",{"_index":212,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["last",{"_index":261,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"index.html":{}}}],["lat",{"_index":421,"title":{},"body":{"interfaces/CityInfoCoord.html":{},"miscellaneous/variables.html":{}}}],["latitude",{"_index":172,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{}}}],["launch",{"_index":700,"title":{},"body":{"index.html":{}}}],["left",{"_index":140,"title":{},"body":{"components/CityCardComponent.html":{}}}],["legend",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["length",{"_index":429,"title":{},"body":{"interfaces/CityInfoMain.html":{}}}],["level",{"_index":225,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["line",{"_index":334,"title":{},"body":{"components/CityForecastComponent.html":{},"interfaces/CityInfoMain.html":{}}}],["lines",{"_index":186,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list",{"_index":190,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["list.clouds",{"_index":247,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.clouds.all",{"_index":248,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.dt",{"_index":191,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.dt_txt",{"_index":267,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main",{"_index":196,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.grnd_level",{"_index":228,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.humidity",{"_index":230,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.pressure",{"_index":221,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.sea_level",{"_index":227,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.temp",{"_index":197,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.temp_kf",{"_index":232,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.temp_max",{"_index":219,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.main.temp_min",{"_index":206,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.model.ts",{"_index":359,"title":{},"body":{"interfaces/CityForecastList.html":{},"coverage.html":{}}}],["list.rain",{"_index":258,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.rain.3h",{"_index":259,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.snow",{"_index":265,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.snow.3h",{"_index":266,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.weather",{"_index":233,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.weather.description",{"_index":243,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.weather.icon",{"_index":245,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.weather.id",{"_index":237,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.weather.main",{"_index":238,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.wind",{"_index":250,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.wind.deg",{"_index":255,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["list.wind.speed",{"_index":251,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["literal",{"_index":368,"title":{},"body":{"interfaces/CityForecastList.html":{}}}],["location",{"_index":171,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{}}}],["lon",{"_index":422,"title":{},"body":{"interfaces/CityInfoCoord.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":174,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{}}}],["m/s",{"_index":119,"title":{},"body":{"components/CityCardComponent.html":{}}}],["magic",{"_index":709,"title":{},"body":{"index.html":{}}}],["main",{"_index":363,"title":{},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoWeather.html":{},"miscellaneous/variables.html":{}}}],["main.grnd_level",{"_index":391,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["main.humidity",{"_index":386,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["main.model.ts",{"_index":423,"title":{},"body":{"interfaces/CityInfoMain.html":{},"coverage.html":{}}}],["main.pressure",{"_index":383,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["main.sea_level",{"_index":390,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["main.temp",{"_index":382,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["main.temp_max",{"_index":389,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["main.temp_min",{"_index":387,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["map",{"_index":431,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{}}}],["mapped_info",{"_index":418,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["mappedinfo.model.ts",{"_index":430,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"coverage.html":{}}}],["maps",{"_index":300,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["margin",{"_index":139,"title":{},"body":{"components/CityCardComponent.html":{},"components/HomeComponent.html":{}}}],["matcardmodule",{"_index":540,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":686,"title":{},"body":{"index.html":{}}}],["math.floor((wind",{"_index":607,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["matprogressspinnermodule",{"_index":539,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":354,"title":{},"body":{"components/CityForecastComponent.html":{},"interfaces/CityInfoMain.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["maximum",{"_index":220,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["maxtemp",{"_index":315,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["media",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["megalopolises",{"_index":214,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["message",{"_index":164,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfoSys.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{}}}],["meteorological",{"_index":257,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWind.html":{}}}],["meter/sec",{"_index":253,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWind.html":{}}}],["method",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{}}}],["methods",{"_index":294,"title":{},"body":{"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["metric",{"_index":202,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoWind.html":{},"injectables/WeatherApiService.html":{}}}],["miles/hour",{"_index":254,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWind.html":{}}}],["min",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["minimum",{"_index":207,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["mintemp",{"_index":318,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["minute",{"_index":331,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["miscellaneous",{"_index":759,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":264,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["module",{"_index":46,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":48,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":208,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"index.html":{}}}],["more",{"_index":234,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"index.html":{}}}],["n",{"_index":611,"title":{},"body":{"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["naming",{"_index":699,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":722,"title":{},"body":{"index.html":{}}}],["ne",{"_index":613,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["necesary",{"_index":301,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["needed",{"_index":587,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["needs",{"_index":369,"title":{},"body":{"interfaces/CityForecastList.html":{}}}],["new",{"_index":322,"title":{},"body":{"components/CityForecastComponent.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":428,"title":{},"body":{"interfaces/CityInfoMain.html":{},"index.html":{}}}],["ng",{"_index":705,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":111,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["nl",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nne",{"_index":612,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["nnw",{"_index":626,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["normalize",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["not(:last",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["notes",{"_index":682,"title":{},"body":{"index.html":{}}}],["npm",{"_index":703,"title":{},"body":{"index.html":{}}}],["number",{"_index":185,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"pipes/TruncatePipe.html":{}}}],["nw",{"_index":625,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["object",{"_index":107,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":467,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["observables",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninit",{"_index":96,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["opacity",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{}}}],["open",{"_index":566,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["open_weather_base_api_url",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open_weather_key",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openweather",{"_index":274,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["optional",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["optionally",{"_index":218,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["options",{"_index":342,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":756,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":658,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["para",{"_index":127,"title":{},"body":{"components/CityCardComponent.html":{}}}],["parameter",{"_index":163,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoSys.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["params",{"_index":569,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["part",{"_index":712,"title":{},"body":{"index.html":{}}}],["path",{"_index":83,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perform",{"_index":702,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":543,"title":{"pipes/TruncatePipe.html":{}},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(map(this.formatweathercall",{"_index":599,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["pipes",{"_index":544,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["pipes/truncate.pipe",{"_index":542,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":559,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["pod",{"_index":372,"title":{},"body":{"interfaces/CityForecastList.html":{},"miscellaneous/variables.html":{}}}],["populate",{"_index":303,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["population",{"_index":281,"title":{},"body":{"interfaces/CityForecastCity.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":211,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["pre",{"_index":685,"title":{},"body":{"index.html":{}}}],["pressure",{"_index":223,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["prod",{"_index":736,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":738,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":676,"title":{},"body":{"index.html":{}}}],["properties",{"_index":269,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["protractor",{"_index":745,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":594,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public/home/home.component",{"_index":78,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["public/public.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["publicmodule",{"_index":59,"title":{"modules/PublicModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules.html":{},"overview.html":{}}}],["rain",{"_index":240,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{}}}],["rain.1h",{"_index":395,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["rain.3h",{"_index":396,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["readme",{"_index":750,"title":{},"body":{"index.html":{}}}],["receive",{"_index":546,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["received",{"_index":92,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["receives",{"_index":105,"title":{},"body":{"components/CityCardComponent.html":{}}}],["redirectto",{"_index":84,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":725,"title":{},"body":{"index.html":{}}}],["replaced",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replacements",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repo",{"_index":713,"title":{},"body":{"index.html":{}}}],["res",{"_index":576,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["res.main",{"_index":602,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["res.main.temp_max",{"_index":317,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["res.main.temp_min",{"_index":319,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["res.weather[0].icon",{"_index":604,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["res.wind.deg",{"_index":605,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["response",{"_index":573,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["responsive",{"_index":344,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["result",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":325,"title":{},"body":{"components/CityForecastComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["returned",{"_index":187,"title":{},"body":{"interfaces/CityForecast.html":{}}}],["returns",{"_index":306,"title":{},"body":{"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["right",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["rome",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherApiService.html":{}}}],["root'},{'name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["routermodule",{"_index":80,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":85,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":79,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":77,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":137,"title":{},"body":{"components/CityCardComponent.html":{}}}],["run",{"_index":718,"title":{},"body":{"index.html":{}}}],["running",{"_index":739,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":591,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["s",{"_index":619,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["scaffolding",{"_index":728,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":692,"title":{},"body":{"index.html":{}}}],["scales",{"_index":346,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["scss",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["se",{"_index":617,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["sea",{"_index":224,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{}}}],["sea_level",{"_index":384,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":688,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":182,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["sent",{"_index":578,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["serve",{"_index":706,"title":{},"body":{"index.html":{}}}],["served",{"_index":715,"title":{},"body":{"index.html":{}}}],["server",{"_index":721,"title":{},"body":{"index.html":{}}}],["service",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{}}}],["set('appid",{"_index":583,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["set('units",{"_index":585,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["shared/models",{"_index":108,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{}}}],["shared/shared.module",{"_index":533,"title":{},"body":{"modules/PublicModule.html":{}}}],["sharedmodule",{"_index":530,"title":{"modules/SharedModule.html":{}},"body":{"modules/PublicModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shift",{"_index":181,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["short",{"_index":328,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["simple",{"_index":683,"title":{},"body":{"index.html":{}}}],["simply",{"_index":716,"title":{},"body":{"index.html":{}}}],["sit",{"_index":707,"title":{},"body":{"index.html":{}}}],["size",{"_index":150,"title":{},"body":{"components/CityCardComponent.html":{}}}],["sky",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sky_icon_url",{"_index":434,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["snow",{"_index":241,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{}}}],["snow.1h",{"_index":397,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["snow.3h",{"_index":398,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"modules/CoreModule.html":{},"components/HomeComponent.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"index.html":{}}}],["specific",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["speed",{"_index":252,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWind.html":{},"miscellaneous/variables.html":{}}}],["src/.../city",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":76,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":444,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/services/weather",{"_index":564,"title":{},"body":{"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["src/app/public/home/home.component.ts",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/public/home/home.component.ts:30",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/public/home/home.component.ts:33",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/public/home/home.component.ts:41",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/public/home/home.component.ts:53",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/public/public.module.ts",{"_index":531,"title":{},"body":{"modules/PublicModule.html":{}}}],["src/app/shared/components/city",{"_index":86,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/city",{"_index":157,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts",{"_index":545,"title":{},"body":{"pipes/TruncatePipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/truncate.pipe.ts:11",{"_index":556,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["src/app/shared/shared.module.ts",{"_index":538,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/mocks/city",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/scss/0_settings/0_variables.scss",{"_index":122,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["sse",{"_index":618,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["ssw",{"_index":620,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["started",{"_index":675,"title":{"index.html":{}},"body":{}}],["statements",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["stations",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":733,"title":{},"body":{"index.html":{}}}],["string",{"_index":285,"title":{},"body":{"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{}}}],["structure",{"_index":697,"title":{},"body":{"index.html":{}}}],["style",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["styling",{"_index":693,"title":{},"body":{"index.html":{}}}],["sun",{"_index":409,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{}}}],["sunrise",{"_index":404,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"miscellaneous/variables.html":{}}}],["sunset",{"_index":406,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":751,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":752,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":621,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["sys",{"_index":364,"title":{},"body":{"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["sys.country",{"_index":402,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["sys.id",{"_index":400,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["sys.message",{"_index":401,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["sys.model.ts",{"_index":439,"title":{},"body":{"interfaces/CityInfoSys.html":{},"coverage.html":{}}}],["sys.sunrise",{"_index":403,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["sys.sunset",{"_index":405,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["sys.type",{"_index":399,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["table",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":149,"title":{},"body":{"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["temp_kf",{"_index":424,"title":{},"body":{"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["temp_max",{"_index":425,"title":{},"body":{"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["temp_min",{"_index":426,"title":{},"body":{"interfaces/CityInfoMain.html":{},"miscellaneous/variables.html":{}}}],["temperature",{"_index":198,"title":{},"body":{"interfaces/CityForecast.html":{},"components/CityForecastComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{},"index.html":{}}}],["temperatures",{"_index":305,"title":{},"body":{"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["test",{"_index":741,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":740,"title":{},"body":{"index.html":{}}}],["text",{"_index":146,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{}}}],["this.$citiesinfo",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.$cityforecast",{"_index":499,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.chart",{"_index":332,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["this.drawchart",{"_index":312,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["this.forecastinfo.list",{"_index":314,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["this.http.get(`${this.url}/forecast",{"_index":600,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["this.http.get(`${this.url}/weather",{"_index":598,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["this.params.set('q",{"_index":597,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["this.weatherservice.getforecast('amsterdam",{"_index":500,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getforecast(city",{"_index":501,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getweather('amsterdam",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getweather('london",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getweather('madrid",{"_index":496,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getweather('paris",{"_index":498,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.weatherservice.getweather('rome",{"_index":497,"title":{},"body":{"components/HomeComponent.html":{}}}],["time",{"_index":192,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{}}}],["timezone",{"_index":282,"title":{},"body":{"interfaces/CityForecastCity.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":350,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["titlecase",{"_index":114,"title":{},"body":{"components/CityCardComponent.html":{}}}],["top",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["trail",{"_index":550,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["transform",{"_index":357,"title":{},"body":{"components/CityForecastComponent.html":{},"pipes/TruncatePipe.html":{}}}],["transform(value",{"_index":554,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["transition",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["transition(':enter",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["transition(':leave",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["trigger",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["trigger('fadeinout",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":345,"title":{},"body":{"components/CityForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":547,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["truncate:15",{"_index":115,"title":{},"body":{"components/CityCardComponent.html":{}}}],["truncatepipe",{"_index":537,"title":{"pipes/TruncatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TruncatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["tslib",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":427,"title":{},"body":{"interfaces/CityInfoMain.html":{}}}],["txt",{"_index":124,"title":{},"body":{"components/CityCardComponent.html":{}}}],["type",{"_index":101,"title":{},"body":{"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"components/CityForecastComponent.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoClouds.html":{},"interfaces/CityInfoCoord.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoSys.html":{},"interfaces/CityInfoWeather.html":{},"interfaces/CityInfoWind.html":{},"components/HomeComponent.html":{},"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":199,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"interfaces/CityInfoWind.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unix",{"_index":195,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{}}}],["updated",{"_index":714,"title":{},"body":{"index.html":{}}}],["url",{"_index":437,"title":{},"body":{"interfaces/CityInfoMappedInfo.html":{},"injectables/WeatherApiService.html":{}}}],["use",{"_index":217,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMain.html":{},"index.html":{}}}],["used",{"_index":304,"title":{},"body":{"components/CityForecastComponent.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"components/HomeComponent.html":{}}}],["useful",{"_index":417,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["using",{"_index":288,"title":{},"body":{"components/CityForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["utc",{"_index":183,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityForecastCity.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoSys.html":{}}}],["val",{"_index":125,"title":{},"body":{"components/CityCardComponent.html":{}}}],["value",{"_index":557,"title":{},"body":{"pipes/TruncatePipe.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":560,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["value.substring(0",{"_index":561,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["values",{"_index":302,"title":{},"body":{"components/CityForecastComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["variable",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":760,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":680,"title":{},"body":{"index.html":{}}}],["via",{"_index":290,"title":{},"body":{"components/CityForecastComponent.html":{},"interfaces/CityInfoMappedInfo.html":{},"index.html":{}}}],["visibility",{"_index":407,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":307,"title":{},"body":{"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["volume",{"_index":260,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["w",{"_index":623,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["weather",{"_index":91,"title":{},"body":{"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{},"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["weather.description",{"_index":379,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["weather.icon",{"_index":380,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["weather.id",{"_index":377,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["weather.main",{"_index":378,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["weather.model.ts",{"_index":440,"title":{},"body":{"interfaces/CityInfoWeather.html":{},"coverage.html":{}}}],["weatherapiservice",{"_index":481,"title":{"injectables/WeatherApiService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["weatherdates",{"_index":320,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["weatherservice",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["weekday",{"_index":327,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["whilst",{"_index":548,"title":{},"body":{"pipes/TruncatePipe.html":{}}}],["whitesmoke",{"_index":352,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["width",{"_index":134,"title":{},"body":{"components/CityCardComponent.html":{},"components/CityForecastComponent.html":{},"components/HomeComponent.html":{}}}],["wind",{"_index":117,"title":{},"body":{"components/CityCardComponent.html":{},"interfaces/CityForecast.html":{},"interfaces/CityForecastList.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoMappedInfo.html":{},"interfaces/CityInfoWind.html":{},"injectables/WeatherApiService.html":{},"miscellaneous/variables.html":{}}}],["wind.deg",{"_index":393,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["wind.model.ts",{"_index":441,"title":{},"body":{"interfaces/CityInfoWind.html":{},"coverage.html":{}}}],["wind.speed",{"_index":392,"title":{},"body":{"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{}}}],["within",{"_index":244,"title":{},"body":{"interfaces/CityForecast.html":{},"interfaces/CityInfo.html":{},"interfaces/CityInfoFormatted.html":{},"interfaces/CityInfoWeather.html":{}}}],["wnw",{"_index":624,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["wrap",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["wsw",{"_index":622,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["xaxes",{"_index":347,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["yaxes",{"_index":348,"title":{},"body":{"components/CityForecastComponent.html":{}}}],["zone.js",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/PublicModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Application Root \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/** Application Root */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityCardComponent', 'selector': 'app-city-card'},{'name': 'CityForecastComponent', 'selector': 'app-city-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPublicModule\n\nPublicModule\n\nAppModule -->\n\nPublicModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            PublicModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PublicModule } from './public/public.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    PublicModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { HomeComponent } from './public/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityCardComponent.html":{"url":"components/CityCardComponent.html","title":"component - CityCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/city-card/city-card.component.ts\n\n\n    \n        Description\n    \n    \n        City Card component\nWill display a card with city weather info received from cityInfo input\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-city-card\n            \n\n            \n                styleUrls\n                ./city-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cityInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cityInfo\n                    \n                \n                \n                    \n                        Type :         CityInfoFormatted\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/city-card/city-card.component.ts:16\n                            \n                        \n                \n                    \n                        Receives a CityInfoFormated type object \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { CityInfoFormatted } from '@shared/models';\n\n/**\n * City Card component\n *\n * Will display a card with city weather info received from `cityInfo` input\n */\n@Component({\n  selector: 'app-city-card',\n  templateUrl: './city-card.component.html',\n  styleUrls: ['./city-card.component.scss']\n})\nexport class CityCardComponent implements OnInit {\n  /** Receives a `CityInfoFormated` type object */\n  @Input() cityInfo: CityInfoFormatted;\n\n  /** @ignore */\n  constructor() { }\n\n  /** @ignore */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    {{cityInfo.name}}\n     {{cityInfo.weather[0].description | titlecase | truncate:15}} \n  \n  \n    \n      {{cityInfo.mapped_info.average_temp}}ºC\n    \n    \n      Wind of:\n      {{ cityInfo.wind.speed }} m/s\n    \n    \n      Wind direction:\n      {{ cityInfo.mapped_info.compass_direction }}\n    \n  \n\n\n    \n\n    \n                \n                    ./city-card.component.scss\n                \n                @import \"./src/scss/0_settings/0_variables.scss\";\n\n$card-content-txt-val-font: $font-para-1;\n$card-content-txt-val-color: $color-alizarin-crimson;\n\n.cc {\n  &__card {\n    width: 200px;\n  }\n  &__content-row {\n    display: flex;\n    margin-left: 56px;\n  }\n  &__content-label {\n    flex: 2;\n  }\n  &__title {\n    color: $card-content-txt-val-color;\n  }\n  &__content-txt {\n    flex: 1;\n    color: $card-content-txt-val-color;\n    font-family: $card-content-txt-val-font;\n    text-align: end;\n\n    &--temp {\n      font-size: 30px;\n      margin-bottom: 10px;\n      text-align: left;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{cityInfo.name}}     {{cityInfo.weather[0].description | titlecase | truncate:15}}               {{cityInfo.mapped_info.average_temp}}ºC              Wind of:      {{ cityInfo.wind.speed }} m/s              Wind direction:      {{ cityInfo.mapped_info.compass_direction }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityCardComponent', 'selector': 'app-city-card'},{'name': 'CityForecastComponent', 'selector': 'app-city-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CityCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityForecast.html":{"url":"interfaces/CityForecast.html","title":"interface - CityForecast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityForecast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-forecast/city-forecast.model.ts\n        \n\n            \n                Description\n            \n            \n                Parameters:\ncode Internal parameter\nmessage Internal parameter\ncity\n   city.id City ID\n   city.name City name\n   city.coord\n     city.coord.lat City geo location, latitude\n     city.coord.lon City geo location, longitude\n   city.country Country code (GB, JP etc.)\n   city.timezone Shift in seconds from UTC\ncnt Number of lines returned by this API call\nlist\n   list.dt Time of data forecasted, unix, UTC\n   list.main\n     list.main.temp Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n     list.main.temp_min Minimum temperature at the moment of calculation. This is deviation from 'temp' that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n     list.main.temp_max Maximum temperature at the moment of calculation. This is deviation from 'temp' that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n     list.main.pressure Atmospheric pressure on the sea level by default, hPa\n     list.main.sea_level Atmospheric pressure on the sea level, hPa\n     list.main.grnd_level Atmospheric pressure on the ground level, hPa\n     list.main.humidity Humidity, %\n     list.main.temp_kf Internal parameter\n   list.weather (more info Weather condition codes)\n     list.weather.id Weather condition id\n     list.weather.main Group of weather parameters (Rain, Snow, Extreme etc.)\n     list.weather.description Weather condition within the group\n     list.weather.icon Weather icon id\n   list.clouds\n     list.clouds.all Cloudiness, %\n   list.wind\n     list.wind.speed Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n     list.wind.deg Wind direction, degrees (meteorological)\n   list.rain\n     list.rain.3h Rain volume for last 3 hours, mm\n   list.snow\n     list.snow.3h Snow volume for last 3 hours\n   list.dt_txt Data/time of calculation, UTC\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        cnt\n                                \n                                \n                                        cod\n                                \n                                \n                                        list\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         CityForecastCity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityForecastCity\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Forecaste City Information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cnt\n                                    \n                                \n                                \n                                    \n                                        cnt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of lines returned by openWeather API call \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cod\n                                    \n                                \n                                \n                                    \n                                        cod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     CityForecastList[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CityForecastList[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Weather information Forecast Array \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CityForecastList, CityForecastCity } from './';\n\n/**\n * Parameters:\n *\n * `code` Internal parameter\n * `message` Internal parameter\n * `city`\n *   `city.id` City ID\n *   `city.name` City name\n *   `city.coord`\n *     `city.coord.lat` City geo location, latitude\n *     `city.coord.lon` City geo location, longitude\n *   `city.country` Country code (GB, JP etc.)\n *   `city.timezone` Shift in seconds from UTC\n * `cnt` Number of lines returned by this API call\n * `list`\n *   `list.dt` Time of data forecasted, unix, UTC\n *   `list.main`\n *     `list.main.temp` Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *     `list.main.temp_min` Minimum temperature at the moment of calculation. This is deviation from 'temp' that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *     `list.main.temp_max` Maximum temperature at the moment of calculation. This is deviation from 'temp' that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *     `list.main.pressure` Atmospheric pressure on the sea level by default, hPa\n *     `list.main.sea_level` Atmospheric pressure on the sea level, hPa\n *     `list.main.grnd_level` Atmospheric pressure on the ground level, hPa\n *     `list.main.humidity` Humidity, %\n *     `list.main.temp_kf` Internal parameter\n *   `list.weather` (more info Weather condition codes)\n *     `list.weather.id` Weather condition id\n *     `list.weather.main` Group of weather parameters (Rain, Snow, Extreme etc.)\n *     `list.weather.description` Weather condition within the group\n *     `list.weather.icon` Weather icon id\n *   `list.clouds`\n *     `list.clouds.all` Cloudiness, %\n *   `list.wind`\n *     `list.wind.speed` Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n *     `list.wind.deg` Wind direction, degrees (meteorological)\n *   `list.rain`\n *     `list.rain.3h` Rain volume for last 3 hours, mm\n *   `list.snow`\n *     `list.snow.3h` Snow volume for last 3 hours\n *   `list.dt_txt` Data/time of calculation, UTC\n */\nexport interface CityForecast {\n  /** Internal parameter */\n  cod: number;\n\n  /** Internal parameter */\n  message: number;\n\n  /** Number of lines returned by openWeather API call */\n  cnt: number;\n\n  /** Weather information Forecast Array */\n  list: CityForecastList[];\n\n  /** Forecaste City Information */\n  city: CityForecastCity;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityForecastCity.html":{"url":"interfaces/CityForecastCity.html","title":"interface - CityForecastCity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityForecastCity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-forecast/city-forecast-city.model.ts\n        \n\n            \n                Description\n            \n            \n                City Details \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        coord\n                                \n                                \n                                        country\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        population\n                                \n                                \n                                        timezone\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coord\n                                    \n                                \n                                \n                                    \n                                        coord:         CityInfoCoord\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoCoord\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City Coordinates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Country code (GB, JP etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City Name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        population\n                                    \n                                \n                                \n                                    \n                                        population:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City population \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Shift in seconds from UTC \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CityInfoCoord } from '../city-info';\n\n/** City Details */\nexport interface CityForecastCity {\n  /** City ID */\n  id: number;\n\n  /** City Name */\n  name: string;\n\n  /** City Coordinates */\n  coord: CityInfoCoord;\n\n  /** Country code (GB, JP etc.) */\n  country: string;\n\n  /** City population */\n  population: number;\n\n  /** Shift in seconds from UTC */\n  timezone: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityForecastComponent.html":{"url":"components/CityForecastComponent.html","title":"component - CityForecastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityForecastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/city-forecast/city-forecast.component.ts\n\n\n    \n        Description\n    \n    \n        Will display a Forecast chart using Chart.js with information received via forecastInfo input\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-city-forecast\n            \n\n            \n                styleUrls\n                ./city-forecast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city-forecast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawChart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forecastInfo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forecastInfo\n                    \n                \n                \n                    \n                        Type :         CityForecast\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/city-forecast/city-forecast.component.ts:15\n                            \n                        \n                \n                    \n                        Received a CityForecast object to be displayed as a chart \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawChart\n                        \n                        \n                    \n                \n            \n            \n                \ndrawChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/city-forecast/city-forecast.component.ts:29\n                \n            \n\n\n            \n                \n                    Calculate and maps all the necesary values to populate a Chart Object that will be used to display the temperatures of the city \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/city-forecast/city-forecast.component.ts:24\n                \n            \n\n\n            \n                \n                    Draws chart \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Chart\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/city-forecast/city-forecast.component.ts:18\n                            \n                        \n\n                \n                    \n                        Chart object configuration \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { CityForecast } from '@shared/models';\n\n/**\n * Will display a Forecast chart using Chart.js with information received via `forecastInfo` input\n */\n@Component({\n  selector: 'app-city-forecast',\n  templateUrl: './city-forecast.component.html',\n  styleUrls: ['./city-forecast.component.scss']\n})\nexport class CityForecastComponent implements OnInit {\n  /** Received a CityForecast object to be displayed as a chart */\n  @Input() forecastInfo: CityForecast;\n\n  /** Chart object configuration */\n  chart: Chart;\n\n  /** @ignore */\n  constructor() { }\n\n  /** Draws chart */\n  ngOnInit() {\n    this.drawChart();\n  }\n\n  /** Calculate and maps all the necesary values to populate a Chart Object that will be used to display the temperatures of the city */\n  drawChart() {\n    const foreList = this.forecastInfo.list;\n    const maxTemp = foreList.map(res => res.main.temp_max);\n    const minTemp = foreList.map(res => res.main.temp_min);\n    const weatherDates = foreList.map(res => {\n      const date = new Date(res.dt * 1000);\n      return date.toLocaleTimeString('en', { weekday: 'short', hour: '2-digit', minute: '2-digit' });\n    });\n\n\n    this.chart = new Chart('cf__canvas', {\n      type: 'line',\n      data: {\n        labels: weatherDates,\n        datasets: [\n          {\n            data: maxTemp,\n            borderColor: '#F37335',\n            fill: false\n          },\n          {\n            data: minTemp,\n            borderColor: '#2980B9',\n            fill: false\n          }\n        ]\n      },\n      options: {\n        animations: false,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }],\n        }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{forecastInfo.city.name}} temperature forecast \n    \n  \n  {{ chart }}\n\n\n    \n\n    \n                \n                    ./city-forecast.component.scss\n                \n                @import \"./src/scss/0_settings/0_variables.scss\";\n\n$card-forecast-title-color: $color-alizarin-crimson;\n$card-background-color: $color-whitesmoke;\n\n.cf {\n  &__card {\n    background-color: $card-background-color;\n    max-width: 1000px;\n    width: 80vw;\n  }\n  &__title {\n    color: $card-forecast-title-color;\n    text-transform: capitalize;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{forecastInfo.city.name}} temperature forecast         {{ chart }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityCardComponent', 'selector': 'app-city-card'},{'name': 'CityForecastComponent', 'selector': 'app-city-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CityForecastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityForecastList.html":{"url":"interfaces/CityForecastList.html","title":"interface - CityForecastList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityForecastList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-forecast/city-forecast-list.model.ts\n        \n\n            \n                Description\n            \n            \n                City Forecast List Information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clouds\n                                \n                                \n                                        dt\n                                \n                                \n                                        dt_txt\n                                \n                                \n                                        main\n                                \n                                \n                                        sys\n                                \n                                \n                                        weather\n                                \n                                \n                                        wind\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clouds\n                                    \n                                \n                                \n                                    \n                                        clouds:         CityInfoClouds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoClouds\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cloud Information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt\n                                    \n                                \n                                \n                                    \n                                        dt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of data forecasted, unix, UTC \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt_txt\n                                    \n                                \n                                \n                                    \n                                        dt_txt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data/time of calculation, UTC \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         CityInfoMain\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoMain\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Main information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sys\n                                    \n                                \n                                \n                                    \n                                        sys:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Needs more info \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:     CityInfoWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CityInfoWeather[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Weather information (Array) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wind\n                                    \n                                \n                                \n                                    \n                                        wind:         CityInfoWind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoWind\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wind Information \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CityInfoMain, CityInfoWeather, CityInfoClouds, CityInfoWind } from '../city-info';\n\n/** City Forecast List Information */\nexport interface CityForecastList {\n  /** Time of data forecasted, unix, UTC */\n  dt: number;\n\n  /** Main information */\n  main: CityInfoMain;\n\n  /** Weather information (Array) */\n  weather: CityInfoWeather[];\n\n  /** Cloud Information */\n  clouds: CityInfoClouds;\n\n  /** Wind Information */\n  wind: CityInfoWind;\n\n  /** Needs more info */\n  sys: {\n    pod: string;\n  };\n\n  /** Data/time of calculation, UTC */\n  dt_txt: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfo.html":{"url":"interfaces/CityInfo.html","title":"interface - CityInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Parameters:\n `coord` Coordinates information\n     `coord.lon` City geo location, longitude\n     `coord.lat` City geo location, latitude\n `weather` (more info Weather condition codes)\n     `weather.id` Weather condition id\n     `weather.main` Group of weather parameters (Rain, Snow, Extreme etc.)\n     `weather.description` Weather condition within the group\n     `weather.icon` Weather icon id\n `base` Internal parameter\n `main`\n     `main.temp` Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n     `main.pressure` Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa\n     `main.humidity` Humidity, %\n     `main.temp_min` Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n     `main.temp_max` Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n     `main.sea_level` Atmospheric pressure on the sea level, hPa\n     `main.grnd_level` Atmospheric pressure on the ground level, hPa\n `wind`\n     `wind.speed` Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n     `wind.deg` Wind direction, degrees (meteorological)\n `clouds`\n     `clouds.all` Cloudiness, %\n `rain`\n     `rain.1h` Rain volume for the last 1 hour, mm\n     `rain.3h` Rain volume for the last 3 hours, mm\n `snow`\n     `snow.1h` Snow volume for the last 1 hour, mm\n     `snow.3h` Snow volume for the last 3 hours, mm\n `dt` Time of data calculation, unix, UTC\n `sys`\n     `sys.type` Internal parameter\n     `sys.id` Internal parameter\n     `sys.message` Internal parameter\n     `sys.country` Country code (GB, JP etc.)\n     `sys.sunrise` Sunrise time, unix, UTC\n     `sys.sunset` Sunset time, unix, UTC\n `timezone` Shift in seconds from UTC\n `id` City ID\n `name` City name\n `cod` Internal parameter\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base\n                                \n                                \n                                        clouds\n                                \n                                \n                                        cod\n                                \n                                \n                                        coord\n                                \n                                \n                                        dt\n                                \n                                \n                                        id\n                                \n                                \n                                        main\n                                \n                                \n                                        name\n                                \n                                \n                                        sys\n                                \n                                \n                                        timezone\n                                \n                                \n                                        visibility\n                                \n                                \n                                        weather\n                                \n                                \n                                        wind\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                    \n                                \n                                \n                                    \n                                        base:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clouds\n                                    \n                                \n                                \n                                    \n                                        clouds:         CityInfoClouds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoClouds\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cloud Information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cod\n                                    \n                                \n                                \n                                    \n                                        cod:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coord\n                                    \n                                \n                                \n                                    \n                                        coord:         CityInfoCoord\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoCoord\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Coordinates information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt\n                                    \n                                \n                                \n                                    \n                                        dt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of data calculation, unix, UTC \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         CityInfoMain\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoMain\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Main information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sys\n                                    \n                                \n                                \n                                    \n                                        sys:         CityInfoSys\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoSys\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sun Information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timezone\n                                    \n                                \n                                \n                                    \n                                        timezone:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Shift in seconds from UTC \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Visibility \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:     CityInfoWeather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CityInfoWeather[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Weather information (Array) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wind\n                                    \n                                \n                                \n                                    \n                                        wind:         CityInfoWind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoWind\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wind Information \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CityInfoCoord, CityInfoWeather, CityInfoMain, CityInfoWind, CityInfoSys, CityInfoMappedInfo, CityInfoClouds } from './';\n\n/**\n * Parameters:\n *\n *     `coord` Coordinates information\n *         `coord.lon` City geo location, longitude\n *         `coord.lat` City geo location, latitude\n *     `weather` (more info Weather condition codes)\n *         `weather.id` Weather condition id\n *         `weather.main` Group of weather parameters (Rain, Snow, Extreme etc.)\n *         `weather.description` Weather condition within the group\n *         `weather.icon` Weather icon id\n *     `base` Internal parameter\n *     `main`\n *         `main.temp` Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *         `main.pressure` Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa\n *         `main.humidity` Humidity, %\n *         `main.temp_min` Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *         `main.temp_max` Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *         `main.sea_level` Atmospheric pressure on the sea level, hPa\n *         `main.grnd_level` Atmospheric pressure on the ground level, hPa\n *     `wind`\n *         `wind.speed` Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n *         `wind.deg` Wind direction, degrees (meteorological)\n *     `clouds`\n *         `clouds.all` Cloudiness, %\n *     `rain`\n *         `rain.1h` Rain volume for the last 1 hour, mm\n *         `rain.3h` Rain volume for the last 3 hours, mm\n *     `snow`\n *         `snow.1h` Snow volume for the last 1 hour, mm\n *         `snow.3h` Snow volume for the last 3 hours, mm\n *     `dt` Time of data calculation, unix, UTC\n *     `sys`\n *         `sys.type` Internal parameter\n *         `sys.id` Internal parameter\n *         `sys.message` Internal parameter\n *         `sys.country` Country code (GB, JP etc.)\n *         `sys.sunrise` Sunrise time, unix, UTC\n *         `sys.sunset` Sunset time, unix, UTC\n *     `timezone` Shift in seconds from UTC\n *     `id` City ID\n *     `name` City name\n *     `cod` Internal parameter\n */\nexport interface CityInfo {\n  /** Coordinates information */\n  coord: CityInfoCoord;\n\n  /** Weather information (Array) */\n  weather: CityInfoWeather[];\n\n  /** Internal parameter */\n  base: string;\n\n  /** Main information */\n  main: CityInfoMain;\n\n  /** Visibility */\n  visibility: number;\n\n  /** Wind Information */\n  wind: CityInfoWind;\n\n  /** Cloud Information */\n  clouds: CityInfoClouds;\n\n  /** Time of data calculation, unix, UTC */\n  dt: number;\n\n  /** Sun Information */\n  sys: CityInfoSys;\n\n  /** Shift in seconds from UTC */\n  timezone: number;\n\n  /** City ID */\n  id: number;\n\n  /** City name */\n  name: string;\n\n  /** Internal parameter */\n  cod: number;\n}\n\n/** Interface to use after the @function formatWeatherCall is used */\nexport interface CityInfoFormatted extends CityInfo {\n  /** Custom added parameter with extra and useful info */\n  mapped_info: CityInfoMappedInfo;\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoClouds.html":{"url":"interfaces/CityInfoClouds.html","title":"interface - CityInfoClouds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoClouds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-clouds.model.ts\n        \n\n            \n                Description\n            \n            \n                City Info Cloud Information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        all\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all\n                                    \n                                \n                                \n                                    \n                                        all:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cloudiness, % \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoClouds {\n  /** Cloudiness, % */\n  all: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoCoord.html":{"url":"interfaces/CityInfoCoord.html","title":"interface - CityInfoCoord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoCoord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-coord.model.ts\n        \n\n            \n                Description\n            \n            \n                City Info Coordinates Information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City geo location, latitude \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    City geo location, longitude \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoCoord {\n  /** City geo location, longitude */\n  lon: number;\n\n  /** City geo location, latitude */\n  lat: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoFormatted.html":{"url":"interfaces/CityInfoFormatted.html","title":"interface - CityInfoFormatted","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoFormatted\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Interface to use after the @function formatWeatherCall is used \n\n            \n\n            \n                Extends\n            \n            \n                        CityInfo\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapped_info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapped_info\n                                    \n                                \n                                \n                                    \n                                        mapped_info:         CityInfoMappedInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CityInfoMappedInfo\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Custom added parameter with extra and useful info \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CityInfoCoord, CityInfoWeather, CityInfoMain, CityInfoWind, CityInfoSys, CityInfoMappedInfo, CityInfoClouds } from './';\n\n/**\n * Parameters:\n *\n *     `coord` Coordinates information\n *         `coord.lon` City geo location, longitude\n *         `coord.lat` City geo location, latitude\n *     `weather` (more info Weather condition codes)\n *         `weather.id` Weather condition id\n *         `weather.main` Group of weather parameters (Rain, Snow, Extreme etc.)\n *         `weather.description` Weather condition within the group\n *         `weather.icon` Weather icon id\n *     `base` Internal parameter\n *     `main`\n *         `main.temp` Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *         `main.pressure` Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa\n *         `main.humidity` Humidity, %\n *         `main.temp_min` Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *         `main.temp_max` Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\n *         `main.sea_level` Atmospheric pressure on the sea level, hPa\n *         `main.grnd_level` Atmospheric pressure on the ground level, hPa\n *     `wind`\n *         `wind.speed` Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\n *         `wind.deg` Wind direction, degrees (meteorological)\n *     `clouds`\n *         `clouds.all` Cloudiness, %\n *     `rain`\n *         `rain.1h` Rain volume for the last 1 hour, mm\n *         `rain.3h` Rain volume for the last 3 hours, mm\n *     `snow`\n *         `snow.1h` Snow volume for the last 1 hour, mm\n *         `snow.3h` Snow volume for the last 3 hours, mm\n *     `dt` Time of data calculation, unix, UTC\n *     `sys`\n *         `sys.type` Internal parameter\n *         `sys.id` Internal parameter\n *         `sys.message` Internal parameter\n *         `sys.country` Country code (GB, JP etc.)\n *         `sys.sunrise` Sunrise time, unix, UTC\n *         `sys.sunset` Sunset time, unix, UTC\n *     `timezone` Shift in seconds from UTC\n *     `id` City ID\n *     `name` City name\n *     `cod` Internal parameter\n */\nexport interface CityInfo {\n  /** Coordinates information */\n  coord: CityInfoCoord;\n\n  /** Weather information (Array) */\n  weather: CityInfoWeather[];\n\n  /** Internal parameter */\n  base: string;\n\n  /** Main information */\n  main: CityInfoMain;\n\n  /** Visibility */\n  visibility: number;\n\n  /** Wind Information */\n  wind: CityInfoWind;\n\n  /** Cloud Information */\n  clouds: CityInfoClouds;\n\n  /** Time of data calculation, unix, UTC */\n  dt: number;\n\n  /** Sun Information */\n  sys: CityInfoSys;\n\n  /** Shift in seconds from UTC */\n  timezone: number;\n\n  /** City ID */\n  id: number;\n\n  /** City name */\n  name: string;\n\n  /** Internal parameter */\n  cod: number;\n}\n\n/** Interface to use after the @function formatWeatherCall is used */\nexport interface CityInfoFormatted extends CityInfo {\n  /** Custom added parameter with extra and useful info */\n  mapped_info: CityInfoMappedInfo;\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoMain.html":{"url":"interfaces/CityInfoMain.html","title":"interface - CityInfoMain","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoMain\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-main.model.ts\n        \n\n            \n                Description\n            \n            \n                City Info Main information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        grnd_level\n                                \n                                \n                                        humidity\n                                \n                                \n                                        pressure\n                                \n                                \n                                        sea_level\n                                \n                                \n                                        temp\n                                \n                                \n                                        temp_kf\n                                \n                                \n                                        temp_max\n                                \n                                \n                                        temp_min\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        grnd_level\n                                    \n                                \n                                \n                                    \n                                        grnd_level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Atmospheric pressure on the ground level, hPa \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Humidity, % \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sea_level\n                                    \n                                \n                                \n                                    \n                                        sea_level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Atmospheric pressure on the sea level, hPa \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_kf\n                                    \n                                \n                                \n                                    \n                                        temp_kf:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_max\n                                    \n                                \n                                \n                                    \n                                        temp_max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_min\n                                    \n                                \n                                \n                                    \n                                        temp_min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoMain {\n  /** Temperature. Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit */\n  temp: number;\n\n  /** Atmospheric pressure (on the sea level, if there is no sea_level or grnd_level data), hPa */\n  pressure: number;\n\n  /** Humidity, % */\n  humidity: number;\n\n  // tslint:disable-next-line: max-line-length\n  /** Minimum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. */\n  temp_min: number;\n\n  // tslint:disable-next-line: max-line-length\n  /** Maximum temperature at the moment. This is deviation from current temp that is possible for large cities and megalopolises geographically expanded (use these parameter optionally). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit. */\n  temp_max: number;\n\n  /** Atmospheric pressure on the sea level, hPa */\n  sea_level: number;\n\n  /** Atmospheric pressure on the ground level, hPa */\n  grnd_level: number;\n\n  /** Internal parameter */\n  temp_kf: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoMappedInfo.html":{"url":"interfaces/CityInfoMappedInfo.html","title":"interface - CityInfoMappedInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoMappedInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-mappedInfo.model.ts\n        \n\n            \n                Description\n            \n            \n                Added properties via map on the api call \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        average_temp\n                                \n                                \n                                        compass_direction\n                                \n                                \n                                        sky_icon_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average_temp\n                                    \n                                \n                                \n                                    \n                                        average_temp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Average temperature \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compass_direction\n                                    \n                                \n                                \n                                    \n                                        compass_direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cardinal wind direction \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sky_icon_url\n                                    \n                                \n                                \n                                    \n                                        sky_icon_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url to fetch the icon of the card \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoMappedInfo {\n  /** Url to fetch the icon of the card */\n  sky_icon_url: string;\n\n  /** Cardinal wind direction */\n  compass_direction: string;\n\n  /** Average temperature */\n  average_temp: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoSys.html":{"url":"interfaces/CityInfoSys.html","title":"interface - CityInfoSys","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoSys\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-sys.model.ts\n        \n\n            \n                Description\n            \n            \n                City Info Sun (?) information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                        sunrise\n                                \n                                \n                                        sunset\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Country code (GB, JP etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunrise\n                                    \n                                \n                                \n                                    \n                                        sunrise:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sunrise time, unix, UTC \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunset\n                                    \n                                \n                                \n                                    \n                                        sunset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sunset time, unix, UTC \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Internal parameter \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoSys {\n  /** Internal parameter */\n  type: number;\n\n  /** Internal parameter */\n  id: number;\n\n  /** Internal parameter */\n  message: number;\n\n  /** Country code (GB, JP etc.) */\n  country: string;\n\n  /** Sunrise time, unix, UTC */\n  sunrise: number;\n\n  /** Sunset time, unix, UTC */\n  sunset: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoWeather.html":{"url":"interfaces/CityInfoWeather.html","title":"interface - CityInfoWeather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoWeather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-weather.model.ts\n        \n\n            \n                Description\n            \n            \n                City Info Weather information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        main\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Weather condition within the group \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Weather icon id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Weather condition id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Group of weather parameters (Rain, Snow, Extreme etc.) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoWeather {\n  /** Weather condition id */\n  id: number;\n\n  /** Group of weather parameters (Rain, Snow, Extreme etc.) */\n  main: string;\n\n  /** Weather condition within the group */\n  description: string;\n\n  /** Weather icon id */\n  icon: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CityInfoWind.html":{"url":"interfaces/CityInfoWind.html","title":"interface - CityInfoWind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CityInfoWind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/city-info/city-info-wind.model.ts\n        \n\n            \n                Description\n            \n            \n                City Info Wind Information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deg\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deg\n                                    \n                                \n                                \n                                    \n                                        deg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wind direction, degrees (meteorological) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CityInfoWind {\n  /** Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour. */\n  speed: number;\n\n  /** Wind direction, degrees (meteorological) */\n  deg: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/public/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Home and landing page\nWill display a list of City Cards components and when clicked, the chart with temperatures will fetch data for that specific city\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $citiesInfo\n                            \n                            \n                                $cityForecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForecast\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecast\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecast(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/home/home.component.ts:53\n                \n            \n\n\n            \n                \n                    Fetchs the forecast for the city of the interacted card \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/public/home/home.component.ts:41\n                \n            \n\n\n            \n                \n                    Initializing the observables to be used on the component, currently hardcoded. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $citiesInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/home/home.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of CityInfoFormated Observables fetched from the Weather Api Service. handled with combineLatest method \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $cityForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/public/home/home.component.ts:33\n                            \n                        \n\n                \n                    \n                        CityForecast Observable fetched from the Weather Api Service \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { style, animate, transition, trigger } from '@angular/animations';\n\nimport { WeatherApiService } from '@core/services/weather-api.service';\nimport { CityForecast, CityInfoFormatted } from '@shared/models';\n\n/** Home and landing page\n *\n * Will display a list of City Cards components and when clicked, the chart with temperatures will fetch data for that specific city\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(500, style({ opacity: 1 }))\n      ]),\n      transition(':leave', [\n        animate(250, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class HomeComponent implements OnInit {\n  /** Array of CityInfoFormated Observables fetched from the Weather Api Service. handled with combineLatest method */\n  $citiesInfo: Observable;\n\n  /** CityForecast Observable fetched from the Weather Api Service */\n  $cityForecast: Observable;\n\n  /** @ignore */\n  constructor(\n    private weatherService: WeatherApiService\n  ) { }\n\n  /** Initializing the observables to be used on the component, currently hardcoded. */\n  ngOnInit() {\n    this.$citiesInfo = combineLatest(\n      this.weatherService.getWeather('Amsterdam'),\n      this.weatherService.getWeather('London'),\n      this.weatherService.getWeather('Madrid'),\n      this.weatherService.getWeather('Rome'),\n      this.weatherService.getWeather('Paris')\n    );\n    this.$cityForecast = this.weatherService.getForecast('Amsterdam');\n  }\n\n  /** Fetchs the forecast for the city of the interacted card */\n  getForecast(city: string) {\n    this.$cityForecast = this.weatherService.getForecast(city);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n      \n      \n    \n  \n\n\n\n   \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .h {\n  &__container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 0 15px;\n  }\n  &__card-holder {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n  &__forecast-holder {\n    margin-top: 20px;\n    min-height: 584px;\n  }\n\n  &__card {\n    margin: 10px 0;\n    &:not(:last-child) {\n      margin-right: 10px;\n    }\n  }\n}\n\n@media (max-width: 650px) {\n  .h__forecast-holder {\n    min-height: 300px;\n  }\n}\n@media (min-width: 650px) and (max-width: 1200px) {\n  .h__forecast-holder {\n    min-height: 500px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityCardComponent', 'selector': 'app-city-card'},{'name': 'CityForecastComponent', 'selector': 'app-city-forecast'},{'name': 'HomeComponent', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublicModule.html":{"url":"modules/PublicModule.html","title":"module - PublicModule","body":"\n                   \n\n\n\n\n    Modules\n    PublicModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_PublicModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nPublicModule\n\nPublicModule\n\nPublicModule -->\n\nHomeComponent->PublicModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPublicModule -->\n\nSharedModule->PublicModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/public/public.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HomeComponent } from './home/home.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class PublicModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCityCardComponent\n\nCityCardComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCityCardComponent->SharedModule\n\n\n\n\n\nCityForecastComponent\n\nCityForecastComponent\n\nSharedModule -->\n\nCityForecastComponent->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\nCityCardComponent \n\nCityCardComponent \n\nCityCardComponent  -->\n\nSharedModule->CityCardComponent \n\n\n\n\n\nCityForecastComponent \n\nCityForecastComponent \n\nCityForecastComponent  -->\n\nSharedModule->CityForecastComponent \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CityCardComponent\n                        \n                        \n                            CityForecastComponent\n                        \n                        \n                            TruncatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CityCardComponent\n                        \n                        \n                            CityForecastComponent\n                        \n                        \n                            TruncatePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatProgressSpinnerModule, MatCardModule } from '@angular/material';\nimport { CityCardComponent, CityForecastComponent } from './components';\nimport { TruncatePipe } from './pipes/truncate.pipe';\n\n\n@NgModule({\n  declarations: [\n    CityCardComponent,\n    CityForecastComponent,\n    TruncatePipe\n  ],\n  imports: [\n    CommonModule,\n\n    MatCardModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    MatCardModule,\n    MatProgressSpinnerModule,\n\n    CityCardComponent,\n    CityForecastComponent,\n\n    TruncatePipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TruncatePipe.html":{"url":"pipes/TruncatePipe.html","title":"pipe - TruncatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TruncatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/truncate.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe will receive a string and truncate it whilst adding a trail at the end,\nboth the number of characters and trail can be customized\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        truncate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, counter: number, trail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/truncate.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    counter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        20\n                                    \n\n                                \n                                \n                                    trail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '...'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/** This pipe will receive a string and truncate it whilst adding a trail at the end,\n * both the number of characters and trail can be customized\n */\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, counter: number = 20, trail: string = '...'): string {\n    return value.length > counter ? value.substring(0, counter) + trail : value;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherApiService.html":{"url":"injectables/WeatherApiService.html","title":"injectable - WeatherApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Open Weather API calls handler \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                params\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatWeatherCall\n                            \n                            \n                                getForecast\n                            \n                            \n                                getWeather\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formatWeatherCall\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatWeatherCall(res: CityInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/weather-api.service.ts:40\n                \n            \n\n\n            \n                \n                    Api response formatter, adding extra information like icon fetch url, compass direction and an temperature average \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                CityInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CityInfoFormatted\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecast\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecast(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/weather-api.service.ts:34\n                \n            \n\n\n            \n                \n                    Will fetch forecast info for the city sent as argument \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeather\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeather(city: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/weather-api.service.ts:27\n                \n            \n\n\n            \n                \n                    Will fetch current weather info for the city sent as argument \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    city\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpParams()\n    .set('APPID', `${environment.open_weather_key}`)\n    .set('units', 'metric')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/weather-api.service.ts:17\n                            \n                        \n\n                \n                    \n                        Default parameters needed for the Open Weather API \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.open_weather_base_api_url\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/weather-api.service.ts:14\n                            \n                        \n\n                \n                    \n                        Open Weather base api url \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CityInfo, CityForecast, CityInfoFormatted } from '@shared/models';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@env/environment.prod';\n\n/** Open Weather API calls handler */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherApiService {\n  /** Open Weather base api url */\n  private url = environment.open_weather_base_api_url;\n\n  /** Default parameters needed for the Open Weather API */\n  private params = new HttpParams()\n    .set('APPID', `${environment.open_weather_key}`)\n    .set('units', 'metric');\n\n  /** @ignore */\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /** Will fetch current weather info for the city sent as argument */\n  getWeather(city: string): Observable {\n    const auxParams = this.params.set('q', city);\n    return this.http.get(`${this.url}/weather`, { params: auxParams })\n      .pipe(map(this.formatWeatherCall));\n  }\n\n  /** Will fetch forecast info for the city sent as argument */\n  getForecast(city: string): Observable {\n    const auxParams = this.params.set('q', city);\n    return this.http.get(`${this.url}/forecast`, { params: auxParams });\n  }\n\n  /** Api response formatter, adding extra information like icon fetch url, compass direction and an temperature average */\n  private formatWeatherCall(res: CityInfo): CityInfoFormatted {\n    const cityTemps = res.main;\n    const iconType = res.weather[0].icon;\n    const wind = res.wind.deg;\n    const degreeHelper = Math.floor((wind / 22.5) + 0.5);\n    const compassDirections = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n\n    const auxResponse: CityInfoFormatted = {\n      ...res,\n      mapped_info: {\n        sky_icon_url: `http://openweathermap.org/img/wn/${iconType}.png`,\n        compass_direction: compassDirections[(degreeHelper % 16)],\n        average_temp: ((cityTemps.temp_max + cityTemps.temp_min) / 2).toFixed(0)\n      }\n    };\n    return auxResponse;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/services/weather-api.service.ts\n            \n            injectable\n            WeatherApiService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/public/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/city-card/city-card.component.ts\n            \n            component\n            CityCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/city-forecast/city-forecast.component.ts\n            \n            component\n            CityForecastComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-forecast/city-forecast-city.model.ts\n            \n            interface\n            CityForecastCity\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-forecast/city-forecast-list.model.ts\n            \n            interface\n            CityForecastList\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-forecast/city-forecast.model.ts\n            \n            interface\n            CityForecast\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-clouds.model.ts\n            \n            interface\n            CityInfoClouds\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-coord.model.ts\n            \n            interface\n            CityInfoCoord\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-main.model.ts\n            \n            interface\n            CityInfoMain\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-mappedInfo.model.ts\n            \n            interface\n            CityInfoMappedInfo\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-sys.model.ts\n            \n            interface\n            CityInfoSys\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-weather.model.ts\n            \n            interface\n            CityInfoWeather\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info-wind.model.ts\n            \n            interface\n            CityInfoWind\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info.model.ts\n            \n            interface\n            CityInfo\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/shared/models/city-info/city-info.model.ts\n            \n            interface\n            CityInfoFormatted\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/truncate.pipe.ts\n            \n            pipe\n            TruncatePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/assets/mocks/city-Info.mock.ts\n            \n            variable\n            cityInfoMock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/assets/mocks/city-forecast.mock.ts\n            \n            variable\n            cityForecastMock\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.1.2\n        \n            @angular/cdk : ^8.1.1\n        \n            @angular/common : ~8.1.1\n        \n            @angular/compiler : ~8.1.1\n        \n            @angular/core : ~8.1.1\n        \n            @angular/forms : ~8.1.1\n        \n            @angular/material : ^8.1.1\n        \n            @angular/platform-browser : ~8.1.1\n        \n            @angular/platform-browser-dynamic : ~8.1.1\n        \n            @angular/router : ~8.1.1\n        \n            chart.js : ^2.8.0\n        \n            normalize-scss : ^7.0.1\n        \n            rxjs : ~6.4.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeather\nThis project was generated with Angular CLI version 8.1.1.\nDev notes\nIt is a simple app that will display 5 pre-defined cities in angular material cards, clicking on any of them will trigger a forecast search that will display the min and max temperature for the next hours in that specific country.\nThe app circles arround Angular last version (8 at this moment), Angular Material, and the more scalable styling conventions like ITCSS for the folder structure and BEM class naming.\nTo launch it, download the code, perform a npm install and after that ng serve, sit back and let the magic flow.\nDocumentation\nDocumentation is already part of the repo, but it can be updated (or served) simply by executing npm run compodoc\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublicModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_PublicModule\n\n\n\ncluster_PublicModule_declarations\n\n\n\ncluster_PublicModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPublicModule\n\nPublicModule\n\nAppModule -->\n\nPublicModule->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nPublicModule -->\n\nHomeComponent->PublicModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPublicModule -->\n\nSharedModule->PublicModule\n\n\n\n\n\nCityCardComponent \n\nCityCardComponent \n\nCityCardComponent  -->\n\nSharedModule->CityCardComponent \n\n\n\n\n\nCityForecastComponent \n\nCityForecastComponent \n\nCityForecastComponent  -->\n\nSharedModule->CityForecastComponent \n\n\n\n\n\nTruncatePipe \n\nTruncatePipe \n\nTruncatePipe  -->\n\nSharedModule->TruncatePipe \n\n\n\n\n\nCityCardComponent\n\nCityCardComponent\n\nSharedModule -->\n\nCityCardComponent->SharedModule\n\n\n\n\n\nCityForecastComponent\n\nCityForecastComponent\n\nSharedModule -->\n\nCityForecastComponent->SharedModule\n\n\n\n\n\nTruncatePipe\n\nTruncatePipe\n\nSharedModule -->\n\nTruncatePipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cityForecastMock   (src/.../city-forecast.mock.ts)\n                        \n                        \n                            cityInfoMock   (src/.../city-Info.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/mocks/city-forecast.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cityForecastMock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CityForecast\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  cod: 200,\n  message: 0.0114,\n  cnt: 40,\n  list: [\n    {\n      dt: 1563861600,\n      main: {\n        temp: 17.07,\n        temp_min: 17.07,\n        temp_max: 19.18,\n        pressure: 1020.96,\n        sea_level: 1020.96,\n        grnd_level: 1021.08,\n        humidity: 72,\n        temp_kf: -2.11\n      },\n      weather: [\n        {\n          id: 800,\n          main: 'Clear',\n          description: 'clear sky',\n          icon: '01d'\n        }\n      ],\n      clouds: {\n        all: 0\n      },\n      wind: {\n        speed: 3.24,\n        deg: 195.002\n      },\n      sys: {\n        pod: 'd'\n      },\n      dt_txt: '2019-07-23 06: 00: 00'\n    }\n  ],\n  city: {\n    id: 2759794,\n    name: 'Amsterdam',\n    coord: {\n      lat: 52.3728,\n      lon: 4.8936\n    },\n    country: 'NL',\n    population: 2122311,\n    timezone: 7200\n  },\n}\n                        \n                    \n\n                \n                    \n                        Default CityForecast values from interface with unit test finality \n\n                    \n                \n\n            \n        \n\n    src/assets/mocks/city-Info.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cityInfoMock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CityInfoFormatted\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  coord: {\n    lon: 12.48,\n    lat: 41.89\n  },\n  weather: [\n    {\n      id: 800,\n      main: 'Clear',\n      description: 'clear sky',\n      icon: '01d',\n    }\n  ],\n  base: 'stations',\n  main: {\n    temp: 22.41,\n    pressure: 1017,\n    humidity: 64,\n    temp_min: 20,\n    temp_max: 25,\n    sea_level: 20,\n    grnd_level: 10,\n    temp_kf: 10\n  },\n  visibility: 10000,\n  wind: {\n    speed: 1,\n    deg: 220\n  },\n  clouds: {\n    all: 0\n  },\n  dt: 1563855728,\n  sys: {\n    type: 1,\n    id: 6792,\n    message: 0.0089,\n    country: 'IT',\n    sunrise: 1563854071,\n    sunset: 1563907094\n  },\n  timezone: 7200,\n  id: 6539761,\n  name: 'Rome',\n  cod: 200,\n  mapped_info: {\n    sky_icon_url: 'http://openweathermap.org/img/wn/1d.png',\n    compass_direction: 'N',\n    average_temp: '25'\n  }\n}\n                        \n                    \n\n                \n                    \n                        Default CityInfo values from interface with unit test finality \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  open_weather_key: 'fee18f34c8778a20c14306ed2d9e34a9',\n  open_weather_base_api_url: 'https://api.openweathermap.org/data/2.5'\n}\n                        \n                    \n\n                \n                    \n                        ng build --prod replaces environment.ts with environment.prod.ts.\n  The list of file replacements can be found in angular.json.\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  open_weather_key: 'fee18f34c8778a20c14306ed2d9e34a9',\n  open_weather_base_api_url: 'https://api.openweathermap.org/data/2.5'\n}\n                        \n                    \n\n                \n                    \n                        This file can be replaced during build by using the fileReplacements array.\nng build --prod replaces environment.ts with environment.prod.ts.\n  The list of file replacements can be found in angular.json.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
